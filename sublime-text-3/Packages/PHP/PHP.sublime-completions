{
	"scope": "source.php - variable.other.php",
	"completions":
	[
		"php",
		{ "trigger": "abs", "contents": "abs(${1:number})" },
		{ "trigger": "acos", "contents": "acos(${1:arg})" },
		{ "trigger": "acosh", "contents": "acosh(${1:arg})" },

		{ "trigger": "addcslashes", "contents": "addcslashes(${1:str}, ${2:charlist})" },
		{ "trigger": "addslashes", "contents": "addslashes(${1:str})" },

		{ "trigger": "array", "contents": "array()" },
		{ "trigger": "array_change_key_case", "contents": "array_change_key_case(${1:input})" },
		{ "trigger": "array_chunk", "contents": "array_chunk(${1:input}, ${2:size})" },
		{ "trigger": "array_combine", "contents": "array_combine(${1:keys}, ${2:values})" },
		{ "trigger": "array_count_values", "contents": "array_count_values(${1:input})" },
		{ "trigger": "array_diff", "contents": "array_diff(${1:array1}, ${2:array2})" },
		{ "trigger": "array_diff_assoc", "contents": "array_diff_assoc(${1:array1}, ${2:array2})" },
		{ "trigger": "array_diff_key", "contents": "array_diff_key(${1:array1}, ${2:array2})" },
		{ "trigger": "array_diff_uassoc", "contents": "array_diff_uassoc(${1:array1}, ${2:array2})" },
		{ "trigger": "array_diff_ukey", "contents": "array_diff_ukey(${1:array1}, ${2:array2})" },
		{ "trigger": "array_fill", "contents": "array_fill(${1:start_index}, ${2:num}, ${3:value})" },
		{ "trigger": "array_fill_keys", "contents": "array_fill_keys(${1:keys}, ${2:value})" },
		{ "trigger": "array_filter", "contents": "array_filter(${1:input})" },
		{ "trigger": "array_flip", "contents": "array_flip(${1:trans})" },
		{ "trigger": "array_intersect", "contents": "array_intersect(${1:array1}, ${2:array2})" },
		{ "trigger": "array_intersect_assoc", "contents": "array_intersect_assoc(${1:array1}, ${2:array2})" },
		{ "trigger": "array_intersect_key", "contents": "array_intersect_key(${1:array1}, ${2:array2})" },
		{ "trigger": "array_intersect_uassoc", "contents": "array_intersect_uassoc(${1:array1}, ${2:array2})" },
		{ "trigger": "array_intersect_ukey", "contents": "array_intersect_ukey(${1:array1}, ${2:array2})" },
		{ "trigger": "array_key_exists", "contents": "array_key_exists(${1:key}, ${2:search})" },
		{ "trigger": "array_keys", "contents": "array_keys(${1:input})" },
		{ "trigger": "array_map", "contents": "array_map(${1:callback}, ${2:arr1})" },
		{ "trigger": "array_merge", "contents": "array_merge(${1:array1})" },
		{ "trigger": "array_merge_recursive", "contents": "array_merge_recursive(${1:array1})" },
		{ "trigger": "array_multisort", "contents": "array_multisort(${1:arr})" },
		{ "trigger": "array_pad", "contents": "array_pad(${1:input}, ${2:pad_size}, ${3:pad_value})" },
		{ "trigger": "array_pop", "contents": "array_pop(${1:array})" },
		{ "trigger": "array_product", "contents": "array_product(${1:array})" },
		{ "trigger": "array_push", "contents": "array_push(${1:array}, ${2:var})" },
		{ "trigger": "array_rand", "contents": "array_rand(${1:input})" },
		{ "trigger": "array_reduce", "contents": "array_reduce(${1:input}, ${2:function})" },
		{ "trigger": "array_replace", "contents": "array_replace(${1:array}, ${2:array1})" },
		{ "trigger": "array_replace_recursive", "contents": "array_replace_recursive(${1:array}, ${2:array1})" },
		{ "trigger": "array_reverse", "contents": "array_reverse(${1:array})" },
		{ "trigger": "array_search", "contents": "array_search(${1:needle}, ${2:haystack})" },
		{ "trigger": "array_shift", "contents": "array_shift(${1:array})" },
		{ "trigger": "array_slice", "contents": "array_slice(${1:array}, ${2:offset})" },
		{ "trigger": "array_splice", "contents": "array_splice(${1:input}, ${2:offset})" },
		{ "trigger": "array_sum", "contents": "array_sum(${1:array})" },
		{ "trigger": "array_udiff", "contents": "array_udiff(${1:array1}, ${2:array2})" },
		{ "trigger": "array_udiff_assoc", "contents": "array_udiff_assoc(${1:array1}, ${2:array2})" },
		{ "trigger": "array_udiff_uassoc", "contents": "array_udiff_uassoc(${1:array1}, ${2:array2})" },
		{ "trigger": "array_uintersect", "contents": "array_uintersect(${1:array1}, ${2:array2})" },
		{ "trigger": "array_uintersect_assoc", "contents": "array_uintersect_assoc(${1:array1}, ${2:array2})" },
		{ "trigger": "array_uintersect_uassoc", "contents": "array_uintersect_uassoc(${1:array1}, ${2:array2})" },
		{ "trigger": "array_unique", "contents": "array_unique(${1:array})" },
		{ "trigger": "array_unshift", "contents": "array_unshift(${1:array}, ${2:var})" },
		{ "trigger": "array_values", "contents": "array_values(${1:input})" },
		{ "trigger": "array_walk", "contents": "array_walk(${1:array}, ${2:funcname})" },
		{ "trigger": "array_walk_recursive", "contents": "array_walk_recursive(${1:input}, ${2:funcname})" },
		{ "trigger": "arsort", "contents": "arsort(${1:array})" },
		{ "trigger": "asin", "contents": "asin(${1:arg})" },
		{ "trigger": "asinh", "contents": "asinh(${1:arg})" },
		{ "trigger": "asort", "contents": "asort(${1:array})" },
		{ "trigger": "assert", "contents": "assert(${1:assertion})" },
		{ "trigger": "assert_options", "contents": "assert_options(${1:what})" },
		{ "trigger": "atan", "contents": "atan(${1:arg})" },
		{ "trigger": "atan2", "contents": "atan2(${1:y}, ${2:x})" },
		{ "trigger": "atanh", "contents": "atanh(${1:arg})" },
		{ "trigger": "base64_decode", "contents": "base64_decode(${1:data})" },
		{ "trigger": "base64_encode", "contents": "base64_encode(${1:data})" },
		{ "trigger": "base_convert", "contents": "base_convert(${1:number}, ${2:frombase}, ${3:tobase})" },
		{ "trigger": "basename", "contents": "basename(${1:path})" },
		{ "trigger": "bbcode_add_element", "contents": "bbcode_add_element(${1:bbcode_container}, ${2:tag_name}, ${3:tag_rules})" },
		{ "trigger": "bbcode_add_smiley", "contents": "bbcode_add_smiley(${1:bbcode_container}, ${2:smiley}, ${3:replace_by})" },
		{ "trigger": "bbcode_create", "contents": "bbcode_create()" },
		{ "trigger": "bbcode_destroy", "contents": "bbcode_destroy(${1:bbcode_container})" },
		{ "trigger": "bbcode_parse", "contents": "bbcode_parse(${1:bbcode_container}, ${2:to_parse})" },
		{ "trigger": "bbcode_set_arg_parser", "contents": "bbcode_set_arg_parser(${1:bbcode_container}, ${2:bbcode_arg_parser})" },
		{ "trigger": "bbcode_set_flags", "contents": "bbcode_set_flags(${1:bbcode_container}, ${2:flags})" },
		{ "trigger": "bcadd", "contents": "bcadd(${1:left_operand}, ${2:right_operand})" },
		{ "trigger": "bccomp", "contents": "bccomp(${1:left_operand}, ${2:right_operand})" },
		{ "trigger": "bcdiv", "contents": "bcdiv(${1:left_operand}, ${2:right_operand})" },
		{ "trigger": "bcmod", "contents": "bcmod(${1:left_operand}, ${2:modulus})" },
		{ "trigger": "bcmul", "contents": "bcmul(${1:left_operand}, ${2:right_operand})" },
		{ "trigger": "bcpow", "contents": "bcpow(${1:left_operand}, ${2:right_operand})" },
		{ "trigger": "bcpowmod", "contents": "bcpowmod(${1:left_operand}, ${2:right_operand}, ${3:modulus})" },
		{ "trigger": "bcscale", "contents": "bcscale(${1:scale})" },
		{ "trigger": "bcsqrt", "contents": "bcsqrt(${1:operand})" },
		{ "trigger": "bcsub", "contents": "bcsub(${1:left_operand}, ${2:right_operand})" },
		{ "trigger": "bin2hex", "contents": "bin2hex(${1:str})" },
		{ "trigger": "bind_textdomain_codeset", "contents": "bind_textdomain_codeset(${1:domain}, ${2:codeset})" },
		{ "trigger": "bindec", "contents": "bindec(${1:binary_string})" },
		{ "trigger": "bindtextdomain", "contents": "bindtextdomain(${1:domain}, ${2:directory})" },
		{ "trigger": "bson_decode", "contents": "bson_decode(${1:bson})" },
		{ "trigger": "bson_encode", "contents": "bson_encode(${1:anything})" },
		{ "trigger": "bzclose", "contents": "bzclose(${1:bz})" },
		{ "trigger": "bzcompress", "contents": "bzcompress(${1:source})" },
		{ "trigger": "bzdecompress", "contents": "bzdecompress(${1:source})" },
		{ "trigger": "bzerrno", "contents": "bzerrno(${1:bz})" },
		{ "trigger": "bzerror", "contents": "bzerror(${1:bz})" },
		{ "trigger": "bzerrstr", "contents": "bzerrstr(${1:bz})" },
		{ "trigger": "bzflush", "contents": "bzflush(${1:bz})" },
		{ "trigger": "bzopen", "contents": "bzopen(${1:filename}, ${2:mode})" },
		{ "trigger": "bzread", "contents": "bzread(${1:bz})" },
		{ "trigger": "bzwrite", "contents": "bzwrite(${1:bz}, ${2:data})" },
		{ "trigger": "cal_days_in_month", "contents": "cal_days_in_month(${1:calendar}, ${2:month}, ${3:year})" },
		{ "trigger": "cal_from_jd", "contents": "cal_from_jd(${1:jd}, ${2:calendar})" },
		{ "trigger": "cal_info", "contents": "cal_info()" },
		{ "trigger": "cal_to_jd", "contents": "cal_to_jd(${1:calendar}, ${2:month}, ${3:day}, ${4:year})" },
		{ "trigger": "calcul_hmac", "contents": "calcul_hmac(${1:clent}, ${2:siretcode}, ${3:price}, ${4:reference}, ${5:validity}, ${6:taxation}, ${7:devise}, ${8:language})" },
		{ "trigger": "calculhmac", "contents": "calculhmac(${1:clent}, ${2:data})" },
		{ "trigger": "call_user_func", "contents": "call_user_func(${1:function})" },
		{ "trigger": "call_user_func_array", "contents": "call_user_func_array(${1:function}, ${2:param_arr})" },
		{ "trigger": "call_user_method", "contents": "call_user_method(${1:method_name}, ${2:obj})" },
		{ "trigger": "call_user_method_array", "contents": "call_user_method_array(${1:method_name}, ${2:obj}, ${3:params})" },
		{ "trigger": "ceil", "contents": "ceil(${1:value})" },
		{ "trigger": "chdb_create", "contents": "chdb_create(${1:pathname}, ${2:data})" },
		{ "trigger": "chdir", "contents": "chdir(${1:directory})" },
		{ "trigger": "checkdate", "contents": "checkdate(${1:month}, ${2:day}, ${3:year})" },
		{ "trigger": "checkdnsrr", "contents": "checkdnsrr(${1:host})" },
		{ "trigger": "chgrp", "contents": "chgrp(${1:filename}, ${2:group})" },
		{ "trigger": "chmod", "contents": "chmod(${1:filename}, ${2:mode})" },
		{ "trigger": "chop", "contents": "chop()" },
		{ "trigger": "chown", "contents": "chown(${1:filename}, ${2:user})" },
		{ "trigger": "chr", "contents": "chr(${1:ascii})" },
		{ "trigger": "chroot", "contents": "chroot(${1:directory})" },
		{ "trigger": "chunk_split", "contents": "chunk_split(${1:body})" },
		{ "trigger": "class_alias", "contents": "class_alias()" },
		{ "trigger": "class_exists", "contents": "class_exists(${1:class_name})" },
		{ "trigger": "class_implements", "contents": "class_implements(${1:class})" },
		{ "trigger": "class_parents", "contents": "class_parents(${1:class})" },
		{ "trigger": "clearstatcache", "contents": "clearstatcache()" },
		{ "trigger": "closedir", "contents": "closedir()" },
		{ "trigger": "closelog", "contents": "closelog(${1:oid})" },
		{ "trigger": "compact", "contents": "compact(${1:varname})" },
		{ "trigger": "connection_aborted", "contents": "connection_aborted(${1:oid})" },
		{ "trigger": "connection_status", "contents": "connection_status(${1:oid})" },
		{ "trigger": "connection_timeout", "contents": "connection_timeout(${1:oid})" },
		{ "trigger": "constant", "contents": "constant(${1:name})" },
		{ "trigger": "convert_cyr_string", "contents": "convert_cyr_string(${1:str}, ${2:from}, ${3:to})" },
		{ "trigger": "convert_uudecode", "contents": "convert_uudecode(${1:data})" },
		{ "trigger": "convert_uuencode", "contents": "convert_uuencode(${1:data})" },
		{ "trigger": "copy", "contents": "copy(${1:source}, ${2:dest})" },
		{ "trigger": "cos", "contents": "cos(${1:arg})" },
		{ "trigger": "cosh", "contents": "cosh(${1:arg})" },
		{ "trigger": "count", "contents": "count(${1:var})" },
		{ "trigger": "count_chars", "contents": "count_chars(${1:string})" },
		{ "trigger": "counter_bump", "contents": "counter_bump(${1:offset})" },
		{ "trigger": "counter_bump_value", "contents": "counter_bump_value(${1:counter}, ${2:offset})" },
		{ "trigger": "counter_create", "contents": "counter_create(${1:name})" },
		{ "trigger": "counter_get", "contents": "counter_get(${1:oid})" },
		{ "trigger": "counter_get_meta", "contents": "counter_get_meta(${1:counter}, ${2:attribute})" },
		{ "trigger": "counter_get_named", "contents": "counter_get_named(${1:name})" },
		{ "trigger": "counter_get_value", "contents": "counter_get_value(${1:counter})" },
		{ "trigger": "counter_reset", "contents": "counter_reset(${1:oid})" },
		{ "trigger": "counter_reset_value", "contents": "counter_reset_value(${1:counter})" },
		{ "trigger": "crack_check", "contents": "crack_check(${1:dictionary}, ${2:password})" },
		{ "trigger": "crack_closedict", "contents": "crack_closedict()" },
		{ "trigger": "crack_getlastmessage", "contents": "crack_getlastmessage(${1:oid})" },
		{ "trigger": "crack_opendict", "contents": "crack_opendict(${1:dictionary})" },
		{ "trigger": "crc32", "contents": "crc32(${1:str})" },
		{ "trigger": "create_function", "contents": "create_function(${1:args}, ${2:code})" },
		{ "trigger": "crypt", "contents": "crypt(${1:str})" },
		{ "trigger": "ctype_alnum", "contents": "ctype_alnum(${1:text})" },
		{ "trigger": "ctype_alpha", "contents": "ctype_alpha(${1:text})" },
		{ "trigger": "ctype_cntrl", "contents": "ctype_cntrl(${1:text})" },
		{ "trigger": "ctype_digit", "contents": "ctype_digit(${1:text})" },
		{ "trigger": "ctype_graph", "contents": "ctype_graph(${1:text})" },
		{ "trigger": "ctype_lower", "contents": "ctype_lower(${1:text})" },
		{ "trigger": "ctype_print", "contents": "ctype_print(${1:text})" },
		{ "trigger": "ctype_punct", "contents": "ctype_punct(${1:text})" },
		{ "trigger": "ctype_space", "contents": "ctype_space(${1:text})" },
		{ "trigger": "ctype_upper", "contents": "ctype_upper(${1:text})" },
		{ "trigger": "ctype_xdigit", "contents": "ctype_xdigit(${1:text})" },
		{ "trigger": "curl_close", "contents": "curl_close(${1:ch})" },
		{ "trigger": "curl_copy_handle", "contents": "curl_copy_handle(${1:ch})" },
		{ "trigger": "curl_errno", "contents": "curl_errno(${1:ch})" },
		{ "trigger": "curl_error", "contents": "curl_error(${1:ch})" },
		{ "trigger": "curl_exec", "contents": "curl_exec(${1:ch})" },
		{ "trigger": "curl_getinfo", "contents": "curl_getinfo(${1:ch})" },
		{ "trigger": "curl_init", "contents": "curl_init()" },
		{ "trigger": "curl_multi_add_handle", "contents": "curl_multi_add_handle(${1:mh}, ${2:ch})" },
		{ "trigger": "curl_multi_close", "contents": "curl_multi_close(${1:mh})" },
		{ "trigger": "curl_multi_exec", "contents": "curl_multi_exec(${1:mh}, ${2:still_running})" },
		{ "trigger": "curl_multi_getcontent", "contents": "curl_multi_getcontent(${1:ch})" },
		{ "trigger": "curl_multi_info_read", "contents": "curl_multi_info_read(${1:mh})" },
		{ "trigger": "curl_multi_init", "contents": "curl_multi_init(${1:oid})" },
		{ "trigger": "curl_multi_remove_handle", "contents": "curl_multi_remove_handle(${1:mh}, ${2:ch})" },
		{ "trigger": "curl_multi_select", "contents": "curl_multi_select(${1:mh})" },
		{ "trigger": "curl_setopt", "contents": "curl_setopt(${1:ch}, ${2:option}, ${3:value})" },
		{ "trigger": "curl_setopt_array", "contents": "curl_setopt_array(${1:ch}, ${2:options})" },
		{ "trigger": "curl_version", "contents": "curl_version()" },
		{ "trigger": "current", "contents": "current(${1:array})" },
		{ "trigger": "date", "contents": "date(${1:format})" },
		{ "trigger": "date_add", "contents": "date_add()" },
		{ "trigger": "date_create", "contents": "date_create()" },
		{ "trigger": "date_create_from_format", "contents": "date_create_from_format()" },
		{ "trigger": "date_date_set", "contents": "date_date_set()" },
		{ "trigger": "date_default_timezone_get", "contents": "date_default_timezone_get(${1:oid})" },
		{ "trigger": "date_default_timezone_set", "contents": "date_default_timezone_set(${1:timezone_identifier})" },
		{ "trigger": "date_diff", "contents": "date_diff()" },
		{ "trigger": "date_format", "contents": "date_format()" },
		{ "trigger": "date_get_last_errors", "contents": "date_get_last_errors()" },
		{ "trigger": "date_interval_create_from_date_string", "contents": "date_interval_create_from_date_string()" },
		{ "trigger": "date_interval_format", "contents": "date_interval_format()" },
		{ "trigger": "date_isodate_set", "contents": "date_isodate_set()" },
		{ "trigger": "date_modify", "contents": "date_modify()" },
		{ "trigger": "date_offset_get", "contents": "date_offset_get()" },
		{ "trigger": "date_parse", "contents": "date_parse(${1:date})" },
		{ "trigger": "date_parse_from_format", "contents": "date_parse_from_format(${1:format}, ${2:date})" },
		{ "trigger": "date_sub", "contents": "date_sub()" },
		{ "trigger": "date_sun_info", "contents": "date_sun_info(${1:time}, ${2:latitude}, ${3:longitude})" },
		{ "trigger": "date_sunrise", "contents": "date_sunrise(${1:timestamp})" },
		{ "trigger": "date_sunset", "contents": "date_sunset(${1:timestamp})" },
		{ "trigger": "date_time_set", "contents": "date_time_set()" },
		{ "trigger": "date_timestamp_get", "contents": "date_timestamp_get()" },
		{ "trigger": "date_timestamp_set", "contents": "date_timestamp_set()" },
		{ "trigger": "date_timezone_get", "contents": "date_timezone_get()" },
		{ "trigger": "date_timezone_set", "contents": "date_timezone_set()" },
		{ "trigger": "dcgettext", "contents": "dcgettext(${1:domain}, ${2:message}, ${3:category})" },
		{ "trigger": "dcngettext", "contents": "dcngettext(${1:domain}, ${2:msgid1}, ${3:msgid2}, ${4:n}, ${5:category})" },
		{ "trigger": "deaggregate", "contents": "deaggregate(${1:object})" },
		{ "trigger": "debug_backtrace", "contents": "debug_backtrace()" },
		{ "trigger": "debug_print_backtrace", "contents": "debug_print_backtrace(${1:oid})" },
		{ "trigger": "debug_zval_dump", "contents": "debug_zval_dump(${1:variable})" },
		{ "trigger": "decbin", "contents": "decbin(${1:number})" },
		{ "trigger": "dechex", "contents": "dechex(${1:number})" },
		{ "trigger": "decoct", "contents": "decoct(${1:number})" },
		{ "trigger": "define", "contents": "define(${1:name}, ${2:value})" },
		{ "trigger": "define_syslog_variables", "contents": "define_syslog_variables(${1:oid})" },
		{ "trigger": "defined", "contents": "defined(${1:name})" },
		{ "trigger": "deg2rad", "contents": "deg2rad(${1:number})" },
		{ "trigger": "delete", "contents": "delete(${1:oid})" },
		{ "trigger": "dgettext", "contents": "dgettext(${1:domain}, ${2:message})" },
		{ "trigger": "die", "contents": "die()" },
		{ "trigger": "dirname", "contents": "dirname(${1:path})" },
		{ "trigger": "disk_free_space", "contents": "disk_free_space(${1:directory})" },
		{ "trigger": "disk_total_space", "contents": "disk_total_space(${1:directory})" },
		{ "trigger": "diskfreespace", "contents": "diskfreespace()" },
		{ "trigger": "dl", "contents": "dl(${1:library})" },
		{ "trigger": "dngettext", "contents": "dngettext(${1:domain}, ${2:msgid1}, ${3:msgid2}, ${4:n})" },
		{ "trigger": "dns_check_record", "contents": "dns_check_record()" },
		{ "trigger": "dns_get_mx", "contents": "dns_get_mx()" },
		{ "trigger": "dns_get_record", "contents": "dns_get_record(${1:hostname})" },
		{ "trigger": "dom_import_simplexml", "contents": "dom_import_simplexml(${1:node})" },
		{ "trigger": "domxml_new_doc", "contents": "domxml_new_doc(${1:version})" },
		{ "trigger": "domxml_open_file", "contents": "domxml_open_file(${1:filename})" },
		{ "trigger": "domxml_open_mem", "contents": "domxml_open_mem(${1:str})" },
		{ "trigger": "domxml_version", "contents": "domxml_version(${1:oid})" },
		{ "trigger": "domxml_xmltree", "contents": "domxml_xmltree(${1:str})" },
		{ "trigger": "domxml_xslt_stylesheet", "contents": "domxml_xslt_stylesheet(${1:xsl_buf})" },
		{ "trigger": "domxml_xslt_stylesheet_doc", "contents": "domxml_xslt_stylesheet_doc(${1:xsl_doc})" },
		{ "trigger": "domxml_xslt_stylesheet_file", "contents": "domxml_xslt_stylesheet_file(${1:xsl_file})" },
		{ "trigger": "domxml_xslt_version", "contents": "domxml_xslt_version(${1:oid})" },
		{ "trigger": "dotnet_load", "contents": "dotnet_load(${1:assembly_name})" },
		{ "trigger": "doubleval", "contents": "doubleval()" },
		{ "trigger": "each", "contents": "each(${1:array})" },
		{ "trigger": "easter_date", "contents": "easter_date()" },
		{ "trigger": "easter_days", "contents": "easter_days()" },
		{ "trigger": "echo", "contents": "echo(${1:arg1})" },
		{ "trigger": "empty", "contents": "empty(${1:var})" },
		{ "trigger": "end", "contents": "end(${1:array})" },
		{ "trigger": "ereg", "contents": "ereg(${1:pattern}, ${2:string})" },
		{ "trigger": "ereg_replace", "contents": "ereg_replace(${1:pattern}, ${2:replacement}, ${3:string})" },
		{ "trigger": "eregi", "contents": "eregi(${1:pattern}, ${2:string})" },
		{ "trigger": "eregi_replace", "contents": "eregi_replace(${1:pattern}, ${2:replacement}, ${3:string})" },
		{ "trigger": "error_get_last", "contents": "error_get_last(${1:oid})" },
		{ "trigger": "error_log", "contents": "error_log(${1:message})" },
		{ "trigger": "error_reporting", "contents": "error_reporting()" },
		{ "trigger": "escapeshellarg", "contents": "escapeshellarg(${1:arg})" },
		{ "trigger": "escapeshellcmd", "contents": "escapeshellcmd(${1:command})" },
		{ "trigger": "eval", "contents": "eval(${1:code_str})" },
		{ "trigger": "exec", "contents": "exec(${1:command})" },
		{ "trigger": "exif_imagetype", "contents": "exif_imagetype(${1:filename})" },
		{ "trigger": "exif_read_data", "contents": "exif_read_data(${1:filename})" },
		{ "trigger": "exif_tagname", "contents": "exif_tagname(${1:index})" },
		{ "trigger": "exif_thumbnail", "contents": "exif_thumbnail(${1:filename})" },
		{ "trigger": "exit", "contents": "exit()" },
		{ "trigger": "exp", "contents": "exp(${1:arg})" },
		{ "trigger": "expect_expectl", "contents": "expect_expectl(${1:expect}, ${2:cases})" },
		{ "trigger": "expect_popen", "contents": "expect_popen(${1:command})" },
		{ "trigger": "explode", "contents": "explode(${1:delimiter}, ${2:string})" },
		{ "trigger": "expm1", "contents": "expm1(${1:arg})" },
		{ "trigger": "extension_loaded", "contents": "extension_loaded(${1:name})" },
		{ "trigger": "extract", "contents": "extract(${1:var_array})" },
		{ "trigger": "ezmlm_hash", "contents": "ezmlm_hash(${1:addr})" },
		{ "trigger": "fclose", "contents": "fclose(${1:handle})" },
		{ "trigger": "feof", "contents": "feof(${1:handle})" },
		{ "trigger": "fflush", "contents": "fflush(${1:handle})" },
		{ "trigger": "fgetc", "contents": "fgetc(${1:handle})" },
		{ "trigger": "fgetcsv", "contents": "fgetcsv(${1:handle})" },
		{ "trigger": "fgets", "contents": "fgets(${1:handle})" },
		{ "trigger": "fgetss", "contents": "fgetss(${1:handle})" },
		{ "trigger": "file", "contents": "file(${1:filename})" },
		{ "trigger": "file_exists", "contents": "file_exists(${1:filename})" },
		{ "trigger": "file_get_contents", "contents": "file_get_contents(${1:filename})" },
		{ "trigger": "file_put_contents", "contents": "file_put_contents(${1:filename}, ${2:data})" },
		{ "trigger": "fileatime", "contents": "fileatime(${1:filename})" },
		{ "trigger": "filectime", "contents": "filectime(${1:filename})" },
		{ "trigger": "filegroup", "contents": "filegroup(${1:filename})" },
		{ "trigger": "fileinode", "contents": "fileinode(${1:filename})" },
		{ "trigger": "filemtime", "contents": "filemtime(${1:filename})" },
		{ "trigger": "fileowner", "contents": "fileowner(${1:filename})" },
		{ "trigger": "fileperms", "contents": "fileperms(${1:filename})" },
		{ "trigger": "filepro", "contents": "filepro(${1:directory})" },
		{ "trigger": "filepro_fieldcount", "contents": "filepro_fieldcount(${1:oid})" },
		{ "trigger": "filepro_fieldname", "contents": "filepro_fieldname(${1:field_number})" },
		{ "trigger": "filepro_fieldtype", "contents": "filepro_fieldtype(${1:field_number})" },
		{ "trigger": "filepro_fieldwidth", "contents": "filepro_fieldwidth(${1:field_number})" },
		{ "trigger": "filepro_retrieve", "contents": "filepro_retrieve(${1:row_number}, ${2:field_number})" },
		{ "trigger": "filepro_rowcount", "contents": "filepro_rowcount(${1:oid})" },
		{ "trigger": "filesize", "contents": "filesize(${1:filename})" },
		{ "trigger": "filetype", "contents": "filetype(${1:filename})" },
		{ "trigger": "filter_has_var", "contents": "filter_has_var(${1:type}, ${2:variable_name})" },
		{ "trigger": "filter_id", "contents": "filter_id(${1:filtername})" },
		{ "trigger": "filter_input", "contents": "filter_input(${1:type}, ${2:variable_name})" },
		{ "trigger": "filter_input_array", "contents": "filter_input_array(${1:type})" },
		{ "trigger": "filter_list", "contents": "filter_list(${1:oid})" },
		{ "trigger": "filter_var", "contents": "filter_var(${1:variable})" },
		{ "trigger": "filter_var_array", "contents": "filter_var_array(${1:data})" },
		{ "trigger": "finfo_buffer", "contents": "finfo_buffer(${1:finfo}, ${2:string = NULL})" },
		{ "trigger": "finfo_close", "contents": "finfo_close(${1:finfo})" },
		{ "trigger": "finfo_file", "contents": "finfo_file(${1:finfo}, ${2:file_name = NULL})" },
		{ "trigger": "finfo_set_flags", "contents": "finfo_set_flags(${1:finfo}, ${2:options})" },
		{ "trigger": "floatval", "contents": "floatval(${1:var})" },
		{ "trigger": "flock", "contents": "flock(${1:handle}, ${2:operation})" },
		{ "trigger": "floor", "contents": "floor(${1:value})" },
		{ "trigger": "flush", "contents": "flush(${1:oid})" },
		{ "trigger": "fmod", "contents": "fmod(${1:x}, ${2:y})" },
		{ "trigger": "fnmatch", "contents": "fnmatch(${1:pattern}, ${2:string})" },
		{ "trigger": "fopen", "contents": "fopen(${1:filename}, ${2:mode})" },
		{ "trigger": "forward_static_call", "contents": "forward_static_call(${1:function})" },
		{ "trigger": "forward_static_call_array", "contents": "forward_static_call_array(${1:function}, ${2:parameters})" },
		{ "trigger": "fpassthru", "contents": "fpassthru(${1:handle})" },
		{ "trigger": "fprintf", "contents": "fprintf(${1:handle}, ${2:format})" },
		{ "trigger": "fputcsv", "contents": "fputcsv(${1:handle}, ${2:fields})" },
		{ "trigger": "fputs", "contents": "fputs()" },
		{ "trigger": "fread", "contents": "fread(${1:handle}, ${2:length})" },
		{ "trigger": "FrenchToJD", "contents": "FrenchToJD(${1:month}, ${2:day}, ${3:year})" },
		{ "trigger": "fribidi_log2vis", "contents": "fribidi_log2vis(${1:str}, ${2:direction}, ${3:charset})" },
		{ "trigger": "fscanf", "contents": "fscanf(${1:handle}, ${2:format})" },
		{ "trigger": "fseek", "contents": "fseek(${1:handle}, ${2:offset})" },
		{ "trigger": "fsockopen", "contents": "fsockopen(${1:hostname})" },
		{ "trigger": "fstat", "contents": "fstat(${1:handle})" },
		{ "trigger": "ftell", "contents": "ftell(${1:handle})" },
		{ "trigger": "ftok", "contents": "ftok(${1:pathname}, ${2:proj})" },
		{ "trigger": "ftp_alloc", "contents": "ftp_alloc(${1:ftp_stream}, ${2:filesize})" },
		{ "trigger": "ftp_cdup", "contents": "ftp_cdup(${1:ftp_stream})" },
		{ "trigger": "ftp_chdir", "contents": "ftp_chdir(${1:ftp_stream}, ${2:directory})" },
		{ "trigger": "ftp_chmod", "contents": "ftp_chmod(${1:ftp_stream}, ${2:mode}, ${3:filename})" },
		{ "trigger": "ftp_close", "contents": "ftp_close(${1:ftp_stream})" },
		{ "trigger": "ftp_connect", "contents": "ftp_connect(${1:host})" },
		{ "trigger": "ftp_delete", "contents": "ftp_delete(${1:ftp_stream}, ${2:path})" },
		{ "trigger": "ftp_exec", "contents": "ftp_exec(${1:ftp_stream}, ${2:command})" },
		{ "trigger": "ftp_fget", "contents": "ftp_fget(${1:ftp_stream}, ${2:handle}, ${3:remote_file}, ${4:mode})" },
		{ "trigger": "ftp_fput", "contents": "ftp_fput(${1:ftp_stream}, ${2:remote_file}, ${3:handle}, ${4:mode})" },
		{ "trigger": "ftp_get", "contents": "ftp_get(${1:ftp_stream}, ${2:local_file}, ${3:remote_file}, ${4:mode})" },
		{ "trigger": "ftp_get_option", "contents": "ftp_get_option(${1:ftp_stream}, ${2:option})" },
		{ "trigger": "ftp_login", "contents": "ftp_login(${1:ftp_stream}, ${2:username}, ${3:password})" },
		{ "trigger": "ftp_mdtm", "contents": "ftp_mdtm(${1:ftp_stream}, ${2:remote_file})" },
		{ "trigger": "ftp_mkdir", "contents": "ftp_mkdir(${1:ftp_stream}, ${2:directory})" },
		{ "trigger": "ftp_nb_continue", "contents": "ftp_nb_continue(${1:ftp_stream})" },
		{ "trigger": "ftp_nb_fget", "contents": "ftp_nb_fget(${1:ftp_stream}, ${2:handle}, ${3:remote_file}, ${4:mode})" },
		{ "trigger": "ftp_nb_fput", "contents": "ftp_nb_fput(${1:ftp_stream}, ${2:remote_file}, ${3:handle}, ${4:mode})" },
		{ "trigger": "ftp_nb_get", "contents": "ftp_nb_get(${1:ftp_stream}, ${2:local_file}, ${3:remote_file}, ${4:mode})" },
		{ "trigger": "ftp_nb_put", "contents": "ftp_nb_put(${1:ftp_stream}, ${2:remote_file}, ${3:local_file}, ${4:mode})" },
		{ "trigger": "ftp_nlist", "contents": "ftp_nlist(${1:ftp_stream}, ${2:directory})" },
		{ "trigger": "ftp_pasv", "contents": "ftp_pasv(${1:ftp_stream}, ${2:pasv})" },
		{ "trigger": "ftp_put", "contents": "ftp_put(${1:ftp_stream}, ${2:remote_file}, ${3:local_file}, ${4:mode})" },
		{ "trigger": "ftp_pwd", "contents": "ftp_pwd(${1:ftp_stream})" },
		{ "trigger": "ftp_quit", "contents": "ftp_quit()" },
		{ "trigger": "ftp_raw", "contents": "ftp_raw(${1:ftp_stream}, ${2:command})" },
		{ "trigger": "ftp_rawlist", "contents": "ftp_rawlist(${1:ftp_stream}, ${2:directory})" },
		{ "trigger": "ftp_rename", "contents": "ftp_rename(${1:ftp_stream}, ${2:oldname}, ${3:newname})" },
		{ "trigger": "ftp_rmdir", "contents": "ftp_rmdir(${1:ftp_stream}, ${2:directory})" },
		{ "trigger": "ftp_set_option", "contents": "ftp_set_option(${1:ftp_stream}, ${2:option}, ${3:value})" },
		{ "trigger": "ftp_site", "contents": "ftp_site(${1:ftp_stream}, ${2:command})" },
		{ "trigger": "ftp_size", "contents": "ftp_size(${1:ftp_stream}, ${2:remote_file})" },
		{ "trigger": "ftp_ssl_connect", "contents": "ftp_ssl_connect(${1:host})" },
		{ "trigger": "ftp_systype", "contents": "ftp_systype(${1:ftp_stream})" },
		{ "trigger": "ftruncate", "contents": "ftruncate(${1:handle}, ${2:size})" },
		{ "trigger": "func_get_arg", "contents": "func_get_arg(${1:arg_num})" },
		{ "trigger": "func_get_args", "contents": "func_get_args(${1:oid})" },
		{ "trigger": "func_num_args", "contents": "func_num_args(${1:oid})" },
		{ "trigger": "function_exists", "contents": "function_exists(${1:function_name})" },
		{ "trigger": "fwrite", "contents": "fwrite(${1:handle}, ${2:string})" },
		{ "trigger": "gc_collect_cycles", "contents": "gc_collect_cycles(${1:oid})" },
		{ "trigger": "gc_disable", "contents": "gc_disable(${1:oid})" },
		{ "trigger": "gc_enable", "contents": "gc_enable(${1:oid})" },
		{ "trigger": "gc_enabled", "contents": "gc_enabled(${1:oid})" },
		{ "trigger": "gd_info", "contents": "gd_info(${1:oid})" },
		{ "trigger": "get_browser", "contents": "get_browser()" },
		{ "trigger": "get_called_class", "contents": "get_called_class(${1:oid})" },
		{ "trigger": "get_cfg_var", "contents": "get_cfg_var(${1:option})" },
		{ "trigger": "get_class", "contents": "get_class()" },
		{ "trigger": "get_class_methods", "contents": "get_class_methods(${1:class_name})" },
		{ "trigger": "get_class_vars", "contents": "get_class_vars(${1:class_name})" },
		{ "trigger": "get_current_user", "contents": "get_current_user(${1:oid})" },
		{ "trigger": "get_declared_classes", "contents": "get_declared_classes(${1:oid})" },
		{ "trigger": "get_declared_interfaces", "contents": "get_declared_interfaces(${1:oid})" },
		{ "trigger": "get_defined_constants", "contents": "get_defined_constants()" },
		{ "trigger": "get_defined_functions", "contents": "get_defined_functions(${1:oid})" },
		{ "trigger": "get_defined_vars", "contents": "get_defined_vars(${1:oid})" },
		{ "trigger": "get_extension_funcs", "contents": "get_extension_funcs(${1:module_name})" },
		{ "trigger": "get_headers", "contents": "get_headers(${1:url})" },
		{ "trigger": "get_html_translation_table", "contents": "get_html_translation_table()" },
		{ "trigger": "get_include_path", "contents": "get_include_path(${1:oid})" },
		{ "trigger": "get_included_files", "contents": "get_included_files(${1:oid})" },
		{ "trigger": "get_loaded_extensions", "contents": "get_loaded_extensions()" },
		{ "trigger": "get_magic_quotes_gpc", "contents": "get_magic_quotes_gpc(${1:oid})" },
		{ "trigger": "get_magic_quotes_runtime", "contents": "get_magic_quotes_runtime(${1:oid})" },
		{ "trigger": "get_meta_tags", "contents": "get_meta_tags(${1:filename})" },
		{ "trigger": "get_object_vars", "contents": "get_object_vars(${1:object})" },
		{ "trigger": "get_parent_class", "contents": "get_parent_class()" },
		{ "trigger": "get_required_files", "contents": "get_required_files()" },
		{ "trigger": "get_resource_type", "contents": "get_resource_type(${1:handle})" },
		{ "trigger": "getallheaders", "contents": "getallheaders(${1:oid})" },
		{ "trigger": "getcwd", "contents": "getcwd(${1:oid})" },
		{ "trigger": "getdate", "contents": "getdate()" },
		{ "trigger": "getenv", "contents": "getenv(${1:varname})" },
		{ "trigger": "gethostbyaddr", "contents": "gethostbyaddr(${1:ip_address})" },
		{ "trigger": "gethostbyname", "contents": "gethostbyname(${1:hostname})" },
		{ "trigger": "gethostbynamel", "contents": "gethostbynamel(${1:hostname})" },
		{ "trigger": "gethostname", "contents": "gethostname(${1:oid})" },
		{ "trigger": "getimagesize", "contents": "getimagesize(${1:filename})" },
		{ "trigger": "getlastmod", "contents": "getlastmod(${1:oid})" },
		{ "trigger": "getmxrr", "contents": "getmxrr(${1:hostname}, ${2:mxhosts})" },
		{ "trigger": "getmygid", "contents": "getmygid(${1:oid})" },
		{ "trigger": "getmyinode", "contents": "getmyinode(${1:oid})" },
		{ "trigger": "getmypid", "contents": "getmypid(${1:oid})" },
		{ "trigger": "getmyuid", "contents": "getmyuid(${1:oid})" },
		{ "trigger": "getopt", "contents": "getopt(${1:options})" },
		{ "trigger": "getprotobyname", "contents": "getprotobyname(${1:name})" },
		{ "trigger": "getprotobynumber", "contents": "getprotobynumber(${1:number})" },
		{ "trigger": "getrandmax", "contents": "getrandmax(${1:oid})" },
		{ "trigger": "getrusage", "contents": "getrusage()" },
		{ "trigger": "getservbyname", "contents": "getservbyname(${1:service}, ${2:protocol})" },
		{ "trigger": "getservbyport", "contents": "getservbyport(${1:port}, ${2:protocol})" },
		{ "trigger": "gettext", "contents": "gettext(${1:message})" },
		{ "trigger": "gettimeofday", "contents": "gettimeofday()" },
		{ "trigger": "gettype", "contents": "gettype(${1:var})" },
		{ "trigger": "glob", "contents": "glob(${1:pattern})" },
		{ "trigger": "gmdate", "contents": "gmdate(${1:format})" },
		{ "trigger": "gmmktime", "contents": "gmmktime()" },
		{ "trigger": "gmstrftime", "contents": "gmstrftime(${1:format})" },
		{ "trigger": "gopher_parsedir", "contents": "gopher_parsedir(${1:dirent})" },
		{ "trigger": "GregorianToJD", "contents": "GregorianToJD(${1:month}, ${2:day}, ${3:year})" },
		{ "trigger": "gzclose", "contents": "gzclose(${1:zp})" },
		{ "trigger": "gzcompress", "contents": "gzcompress(${1:data})" },
		{ "trigger": "gzdecode", "contents": "gzdecode(${1:data})" },
		{ "trigger": "gzdeflate", "contents": "gzdeflate(${1:data})" },
		{ "trigger": "gzencode", "contents": "gzencode(${1:data})" },
		{ "trigger": "gzeof", "contents": "gzeof(${1:zp})" },
		{ "trigger": "gzfile", "contents": "gzfile(${1:filename})" },
		{ "trigger": "gzgetc", "contents": "gzgetc(${1:zp})" },
		{ "trigger": "gzgets", "contents": "gzgets(${1:zp}, ${2:length})" },
		{ "trigger": "gzgetss", "contents": "gzgetss(${1:zp}, ${2:length})" },
		{ "trigger": "gzinflate", "contents": "gzinflate(${1:data})" },
		{ "trigger": "gzopen", "contents": "gzopen(${1:filename}, ${2:mode})" },
		{ "trigger": "gzpassthru", "contents": "gzpassthru(${1:zp})" },
		{ "trigger": "gzputs", "contents": "gzputs()" },
		{ "trigger": "gzread", "contents": "gzread(${1:zp}, ${2:length})" },
		{ "trigger": "gzrewind", "contents": "gzrewind(${1:zp})" },
		{ "trigger": "gzseek", "contents": "gzseek(${1:zp}, ${2:offset})" },
		{ "trigger": "gztell", "contents": "gztell(${1:zp})" },
		{ "trigger": "gzuncompress", "contents": "gzuncompress(${1:data})" },
		{ "trigger": "gzwrite", "contents": "gzwrite(${1:zp}, ${2:string})" },
		{ "trigger": "__halt_compiler", "contents": "__halt_compiler(${1:oid})" },
		{ "trigger": "hash", "contents": "hash(${1:algo}, ${2:data})" },
		{ "trigger": "hash_algos", "contents": "hash_algos(${1:oid})" },
		{ "trigger": "hash_copy", "contents": "hash_copy(${1:context})" },
		{ "trigger": "hash_file", "contents": "hash_file(${1:algo}, ${2:filename})" },
		{ "trigger": "hash_final", "contents": "hash_final(${1:context})" },
		{ "trigger": "hash_hmac", "contents": "hash_hmac(${1:algo}, ${2:data}, ${3:key})" },
		{ "trigger": "hash_hmac_file", "contents": "hash_hmac_file(${1:algo}, ${2:filename}, ${3:key})" },
		{ "trigger": "hash_init", "contents": "hash_init(${1:algo})" },
		{ "trigger": "hash_update", "contents": "hash_update(${1:context}, ${2:data})" },
		{ "trigger": "hash_update_file", "contents": "hash_update_file(${1:context}, ${2:filename})" },
		{ "trigger": "hash_update_stream", "contents": "hash_update_stream(${1:context}, ${2:handle})" },
		{ "trigger": "header", "contents": "header(${1:string})" },
		{ "trigger": "header_remove", "contents": "header_remove()" },
		{ "trigger": "headers_list", "contents": "headers_list(${1:oid})" },
		{ "trigger": "headers_sent", "contents": "headers_sent()" },
		{ "trigger": "hebrev", "contents": "hebrev(${1:hebrew_text})" },
		{ "trigger": "hebrevc", "contents": "hebrevc(${1:hebrew_text})" },
		{ "trigger": "hexdec", "contents": "hexdec(${1:hex_string})" },
		{ "trigger": "highlight_file", "contents": "highlight_file(${1:filename})" },
		{ "trigger": "highlight_string", "contents": "highlight_string(${1:str})" },
		{ "trigger": "html_entity_decode", "contents": "html_entity_decode(${1:string})" },
		{ "trigger": "htmlentities", "contents": "htmlentities(${1:string})" },
		{ "trigger": "htmlspecialchars", "contents": "htmlspecialchars(${1:string})" },
		{ "trigger": "htmlspecialchars_decode", "contents": "htmlspecialchars_decode(${1:string})" },
		{ "trigger": "http_build_cookie", "contents": "http_build_cookie(${1:cookie})" },
		{ "trigger": "http_build_query", "contents": "http_build_query(${1:query_data})" },
		{ "trigger": "http_build_str", "contents": "http_build_str(${1:query})" },
		{ "trigger": "http_build_url", "contents": "http_build_url()" },
		{ "trigger": "http_cache_etag", "contents": "http_cache_etag()" },
		{ "trigger": "http_cache_last_modified", "contents": "http_cache_last_modified()" },
		{ "trigger": "http_chunked_decode", "contents": "http_chunked_decode(${1:encoded})" },
		{ "trigger": "http_date", "contents": "http_date()" },
		{ "trigger": "http_deflate", "contents": "http_deflate(${1:data})" },
		{ "trigger": "http_get", "contents": "http_get(${1:url})" },
		{ "trigger": "http_get_request_body", "contents": "http_get_request_body(${1:oid})" },
		{ "trigger": "http_get_request_body_stream", "contents": "http_get_request_body_stream(${1:oid})" },
		{ "trigger": "http_get_request_headers", "contents": "http_get_request_headers(${1:oid})" },
		{ "trigger": "http_head", "contents": "http_head(${1:url})" },
		{ "trigger": "http_inflate", "contents": "http_inflate(${1:data})" },
		{ "trigger": "http_match_etag", "contents": "http_match_etag(${1:etag})" },
		{ "trigger": "http_match_modified", "contents": "http_match_modified()" },
		{ "trigger": "http_match_request_header", "contents": "http_match_request_header(${1:header}, ${2:value})" },
		{ "trigger": "http_negotiate_charset", "contents": "http_negotiate_charset(${1:supported})" },
		{ "trigger": "http_negotiate_content_type", "contents": "http_negotiate_content_type(${1:supported})" },
		{ "trigger": "http_negotiate_language", "contents": "http_negotiate_language(${1:supported})" },
		{ "trigger": "http_parse_cookie", "contents": "http_parse_cookie(${1:cookie})" },
		{ "trigger": "http_parse_headers", "contents": "http_parse_headers(${1:header})" },
		{ "trigger": "http_parse_message", "contents": "http_parse_message(${1:message})" },
		{ "trigger": "http_parse_params", "contents": "http_parse_params(${1:param})" },
		{ "trigger": "http_persistent_handles_clean", "contents": "http_persistent_handles_clean()" },
		{ "trigger": "http_persistent_handles_count", "contents": "http_persistent_handles_count(${1:oid})" },
		{ "trigger": "http_persistent_handles_ident", "contents": "http_persistent_handles_ident()" },
		{ "trigger": "http_post_data", "contents": "http_post_data(${1:url}, ${2:data})" },
		{ "trigger": "http_post_fields", "contents": "http_post_fields(${1:url}, ${2:data})" },
		{ "trigger": "http_put_data", "contents": "http_put_data(${1:url}, ${2:data})" },
		{ "trigger": "http_put_file", "contents": "http_put_file(${1:url}, ${2:file})" },
		{ "trigger": "http_put_stream", "contents": "http_put_stream(${1:url}, ${2:stream})" },
		{ "trigger": "http_redirect", "contents": "http_redirect()" },
		{ "trigger": "http_request", "contents": "http_request(${1:method}, ${2:url})" },
		{ "trigger": "http_request_body_encode", "contents": "http_request_body_encode(${1:fields}, ${2:files})" },
		{ "trigger": "http_request_method_exists", "contents": "http_request_method_exists(${1:method})" },
		{ "trigger": "http_request_method_name", "contents": "http_request_method_name(${1:method})" },
		{ "trigger": "http_request_method_register", "contents": "http_request_method_register(${1:method})" },
		{ "trigger": "http_request_method_unregister", "contents": "http_request_method_unregister(${1:method})" },
		{ "trigger": "http_send_content_disposition", "contents": "http_send_content_disposition(${1:filename})" },
		{ "trigger": "http_send_content_type", "contents": "http_send_content_type()" },
		{ "trigger": "http_send_data", "contents": "http_send_data(${1:data})" },
		{ "trigger": "http_send_file", "contents": "http_send_file(${1:file})" },
		{ "trigger": "http_send_last_modified", "contents": "http_send_last_modified()" },
		{ "trigger": "http_send_status", "contents": "http_send_status(${1:status})" },
		{ "trigger": "http_send_stream", "contents": "http_send_stream(${1:stream})" },
		{ "trigger": "http_support", "contents": "http_support()" },
		{ "trigger": "http_throttle", "contents": "http_throttle(${1:sec})" },
		{ "trigger": "hypot", "contents": "hypot(${1:x}, ${2:y})" },
		{ "trigger": "iconv", "contents": "iconv(${1:in_charset}, ${2:out_charset}, ${3:str})" },
		{ "trigger": "iconv_get_encoding", "contents": "iconv_get_encoding()" },
		{ "trigger": "iconv_mime_decode", "contents": "iconv_mime_decode(${1:encoded_header})" },
		{ "trigger": "iconv_mime_decode_headers", "contents": "iconv_mime_decode_headers(${1:encoded_headers})" },
		{ "trigger": "iconv_mime_encode", "contents": "iconv_mime_encode(${1:field_name}, ${2:field_value})" },
		{ "trigger": "iconv_set_encoding", "contents": "iconv_set_encoding(${1:type}, ${2:charset})" },
		{ "trigger": "iconv_strlen", "contents": "iconv_strlen(${1:str})" },
		{ "trigger": "iconv_strpos", "contents": "iconv_strpos(${1:haystack}, ${2:needle})" },
		{ "trigger": "iconv_strrpos", "contents": "iconv_strrpos(${1:haystack}, ${2:needle})" },
		{ "trigger": "iconv_substr", "contents": "iconv_substr(${1:str}, ${2:offset})" },
		{ "trigger": "idate", "contents": "idate(${1:format})" },
		{ "trigger": "ignore_user_abort", "contents": "ignore_user_abort()" },
		{ "trigger": "image2wbmp", "contents": "image2wbmp(${1:image})" },
		{ "trigger": "image_type_to_extension", "contents": "image_type_to_extension(${1:imagetype})" },
		{ "trigger": "image_type_to_mime_type", "contents": "image_type_to_mime_type(${1:imagetype})" },
		{ "trigger": "imagealphablending", "contents": "imagealphablending(${1:image}, ${2:blendmode})" },
		{ "trigger": "imageantialias", "contents": "imageantialias(${1:image}, ${2:enabled})" },
		{ "trigger": "imagearc", "contents": "imagearc(${1:image}, ${2:cx}, ${3:cy}, ${4:width}, ${5:height}, ${6:start}, ${7:end}, ${8:color})" },
		{ "trigger": "imagechar", "contents": "imagechar(${1:image}, ${2:font}, ${3:x}, ${4:y}, ${5:c}, ${6:color})" },
		{ "trigger": "imagecharup", "contents": "imagecharup(${1:image}, ${2:font}, ${3:x}, ${4:y}, ${5:c}, ${6:color})" },
		{ "trigger": "imagecolorallocate", "contents": "imagecolorallocate(${1:image}, ${2:red}, ${3:green}, ${4:blue})" },
		{ "trigger": "imagecolorallocatealpha", "contents": "imagecolorallocatealpha(${1:image}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})" },
		{ "trigger": "imagecolorat", "contents": "imagecolorat(${1:image}, ${2:x}, ${3:y})" },
		{ "trigger": "imagecolorclosest", "contents": "imagecolorclosest(${1:image}, ${2:red}, ${3:green}, ${4:blue})" },
		{ "trigger": "imagecolorclosestalpha", "contents": "imagecolorclosestalpha(${1:image}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})" },
		{ "trigger": "imagecolorclosesthwb", "contents": "imagecolorclosesthwb(${1:image}, ${2:red}, ${3:green}, ${4:blue})" },
		{ "trigger": "imagecolordeallocate", "contents": "imagecolordeallocate(${1:image}, ${2:color})" },
		{ "trigger": "imagecolorexact", "contents": "imagecolorexact(${1:image}, ${2:red}, ${3:green}, ${4:blue})" },
		{ "trigger": "imagecolorexactalpha", "contents": "imagecolorexactalpha(${1:image}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})" },
		{ "trigger": "imagecolormatch", "contents": "imagecolormatch(${1:image1}, ${2:image2})" },
		{ "trigger": "imagecolorresolve", "contents": "imagecolorresolve(${1:image}, ${2:red}, ${3:green}, ${4:blue})" },
		{ "trigger": "imagecolorresolvealpha", "contents": "imagecolorresolvealpha(${1:image}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})" },
		{ "trigger": "imagecolorset", "contents": "imagecolorset(${1:image}, ${2:index}, ${3:red}, ${4:green}, ${5:blue})" },
		{ "trigger": "imagecolorsforindex", "contents": "imagecolorsforindex(${1:image}, ${2:index})" },
		{ "trigger": "imagecolorstotal", "contents": "imagecolorstotal(${1:image})" },
		{ "trigger": "imagecolortransparent", "contents": "imagecolortransparent(${1:image})" },
		{ "trigger": "imageconvolution", "contents": "imageconvolution(${1:image}, ${2:matrix}, ${3:div}, ${4:offset})" },
		{ "trigger": "imagecopy", "contents": "imagecopy(${1:dst_im}, ${2:src_im}, ${3:dst_x}, ${4:dst_y}, ${5:src_x}, ${6:src_y}, ${7:src_w}, ${8:src_h})" },
		{ "trigger": "imagecopymerge", "contents": "imagecopymerge(${1:dst_im}, ${2:src_im}, ${3:dst_x}, ${4:dst_y}, ${5:src_x}, ${6:src_y}, ${7:src_w}, ${8:src_h}, ${9:pct})" },
		{ "trigger": "imagecopymergegray", "contents": "imagecopymergegray(${1:dst_im}, ${2:src_im}, ${3:dst_x}, ${4:dst_y}, ${5:src_x}, ${6:src_y}, ${7:src_w}, ${8:src_h}, ${9:pct})" },
		{ "trigger": "imagecopyresampled", "contents": "imagecopyresampled(${1:dst_image}, ${2:src_image}, ${3:dst_x}, ${4:dst_y}, ${5:src_x}, ${6:src_y}, ${7:dst_w}, ${8:dst_h}, ${9:src_w}, ${10:src_h})" },
		{ "trigger": "imagecopyresized", "contents": "imagecopyresized(${1:dst_image}, ${2:src_image}, ${3:dst_x}, ${4:dst_y}, ${5:src_x}, ${6:src_y}, ${7:dst_w}, ${8:dst_h}, ${9:src_w}, ${10:src_h})" },
		{ "trigger": "imagecreate", "contents": "imagecreate(${1:width}, ${2:height})" },
		{ "trigger": "imagecreatefromgd", "contents": "imagecreatefromgd(${1:filename})" },
		{ "trigger": "imagecreatefromgd2", "contents": "imagecreatefromgd2(${1:filename})" },
		{ "trigger": "imagecreatefromgd2part", "contents": "imagecreatefromgd2part(${1:filename}, ${2:srcX}, ${3:srcY}, ${4:width}, ${5:height})" },
		{ "trigger": "imagecreatefromgif", "contents": "imagecreatefromgif(${1:filename})" },
		{ "trigger": "imagecreatefromjpeg", "contents": "imagecreatefromjpeg(${1:filename})" },
		{ "trigger": "imagecreatefrompng", "contents": "imagecreatefrompng(${1:filename})" },
		{ "trigger": "imagecreatefromstring", "contents": "imagecreatefromstring(${1:data})" },
		{ "trigger": "imagecreatefromwbmp", "contents": "imagecreatefromwbmp(${1:filename})" },
		{ "trigger": "imagecreatefromxbm", "contents": "imagecreatefromxbm(${1:filename})" },
		{ "trigger": "imagecreatefromxpm", "contents": "imagecreatefromxpm(${1:filename})" },
		{ "trigger": "imagecreatetruecolor", "contents": "imagecreatetruecolor(${1:width}, ${2:height})" },
		{ "trigger": "imagedashedline", "contents": "imagedashedline(${1:image}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:color})" },
		{ "trigger": "imagedestroy", "contents": "imagedestroy(${1:image})" },
		{ "trigger": "imageellipse", "contents": "imageellipse(${1:image}, ${2:cx}, ${3:cy}, ${4:width}, ${5:height}, ${6:color})" },
		{ "trigger": "imagefill", "contents": "imagefill(${1:image}, ${2:x}, ${3:y}, ${4:color})" },
		{ "trigger": "imagefilledarc", "contents": "imagefilledarc(${1:image}, ${2:cx}, ${3:cy}, ${4:width}, ${5:height}, ${6:start}, ${7:end}, ${8:color}, ${9:style})" },
		{ "trigger": "imagefilledellipse", "contents": "imagefilledellipse(${1:image}, ${2:cx}, ${3:cy}, ${4:width}, ${5:height}, ${6:color})" },
		{ "trigger": "imagefilledpolygon", "contents": "imagefilledpolygon(${1:image}, ${2:points}, ${3:num_points}, ${4:color})" },
		{ "trigger": "imagefilledrectangle", "contents": "imagefilledrectangle(${1:image}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:color})" },
		{ "trigger": "imagefilltoborder", "contents": "imagefilltoborder(${1:image}, ${2:x}, ${3:y}, ${4:border}, ${5:color})" },
		{ "trigger": "imagefilter", "contents": "imagefilter(${1:image}, ${2:filtertype})" },
		{ "trigger": "imagefontheight", "contents": "imagefontheight(${1:font})" },
		{ "trigger": "imagefontwidth", "contents": "imagefontwidth(${1:font})" },
		{ "trigger": "imageftbbox", "contents": "imageftbbox(${1:size}, ${2:angle}, ${3:fontfile}, ${4:text})" },
		{ "trigger": "imagefttext", "contents": "imagefttext(${1:image}, ${2:size}, ${3:angle}, ${4:x}, ${5:y}, ${6:color}, ${7:fontfile}, ${8:text})" },
		{ "trigger": "imagegammacorrect", "contents": "imagegammacorrect(${1:image}, ${2:inputgamma}, ${3:outputgamma})" },
		{ "trigger": "imagegd", "contents": "imagegd(${1:image})" },
		{ "trigger": "imagegd2", "contents": "imagegd2(${1:image})" },
		{ "trigger": "imagegif", "contents": "imagegif(${1:image})" },
		{ "trigger": "imagegrabscreen", "contents": "imagegrabscreen(${1:oid})" },
		{ "trigger": "imagegrabwindow", "contents": "imagegrabwindow(${1:window_handle})" },
		{ "trigger": "imageinterlace", "contents": "imageinterlace(${1:image})" },
		{ "trigger": "imageistruecolor", "contents": "imageistruecolor(${1:image})" },
		{ "trigger": "imagejpeg", "contents": "imagejpeg(${1:image})" },
		{ "trigger": "imagelayereffect", "contents": "imagelayereffect(${1:image}, ${2:effect})" },
		{ "trigger": "imageline", "contents": "imageline(${1:image}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:color})" },
		{ "trigger": "imageloadfont", "contents": "imageloadfont(${1:file})" },
		{ "trigger": "imagepalettecopy", "contents": "imagepalettecopy(${1:destination}, ${2:source})" },
		{ "trigger": "imagepng", "contents": "imagepng(${1:image})" },
		{ "trigger": "imagepolygon", "contents": "imagepolygon(${1:image}, ${2:points}, ${3:num_points}, ${4:color})" },
		{ "trigger": "imagepsbbox", "contents": "imagepsbbox(${1:text}, ${2:font}, ${3:size})" },
		{ "trigger": "imagepsencodefont", "contents": "imagepsencodefont(${1:font_index}, ${2:encodingfile})" },
		{ "trigger": "imagepsextendfont", "contents": "imagepsextendfont(${1:font_index}, ${2:extend})" },
		{ "trigger": "imagepsfreefont", "contents": "imagepsfreefont(${1:font_index})" },
		{ "trigger": "imagepsloadfont", "contents": "imagepsloadfont(${1:filename})" },
		{ "trigger": "imagepsslantfont", "contents": "imagepsslantfont(${1:font_index}, ${2:slant})" },
		{ "trigger": "imagepstext", "contents": "imagepstext(${1:image}, ${2:text}, ${3:font_index}, ${4:size}, ${5:foreground}, ${6:background}, ${7:x}, ${8:y})" },
		{ "trigger": "imagerectangle", "contents": "imagerectangle(${1:image}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:color})" },
		{ "trigger": "imagerotate", "contents": "imagerotate(${1:image}, ${2:angle}, ${3:bgd_color})" },
		{ "trigger": "imagesavealpha", "contents": "imagesavealpha(${1:image}, ${2:saveflag})" },
		{ "trigger": "imagesetbrush", "contents": "imagesetbrush(${1:image}, ${2:brush})" },
		{ "trigger": "imagesetpixel", "contents": "imagesetpixel(${1:image}, ${2:x}, ${3:y}, ${4:color})" },
		{ "trigger": "imagesetstyle", "contents": "imagesetstyle(${1:image}, ${2:style})" },
		{ "trigger": "imagesetthickness", "contents": "imagesetthickness(${1:image}, ${2:thickness})" },
		{ "trigger": "imagesettile", "contents": "imagesettile(${1:image}, ${2:tile})" },
		{ "trigger": "imagestring", "contents": "imagestring(${1:image}, ${2:font}, ${3:x}, ${4:y}, ${5:string}, ${6:color})" },
		{ "trigger": "imagestringup", "contents": "imagestringup(${1:image}, ${2:font}, ${3:x}, ${4:y}, ${5:string}, ${6:color})" },
		{ "trigger": "imagesx", "contents": "imagesx(${1:image})" },
		{ "trigger": "imagesy", "contents": "imagesy(${1:image})" },
		{ "trigger": "imagetruecolortopalette", "contents": "imagetruecolortopalette(${1:image}, ${2:dither}, ${3:ncolors})" },
		{ "trigger": "imagettfbbox", "contents": "imagettfbbox(${1:size}, ${2:angle}, ${3:fontfile}, ${4:text})" },
		{ "trigger": "imagettftext", "contents": "imagettftext(${1:image}, ${2:size}, ${3:angle}, ${4:x}, ${5:y}, ${6:color}, ${7:fontfile}, ${8:text})" },
		{ "trigger": "imagetypes", "contents": "imagetypes(${1:oid})" },
		{ "trigger": "imagewbmp", "contents": "imagewbmp(${1:image})" },
		{ "trigger": "imagexbm", "contents": "imagexbm(${1:image}, ${2:filename})" },
		{ "trigger": "implode", "contents": "implode(${1:glue}, ${2:pieces})" },
		{ "trigger": "import_request_variables", "contents": "import_request_variables(${1:types})" },
		{ "trigger": "in_array", "contents": "in_array(${1:needle}, ${2:haystack})" },
		{ "trigger": "", "contents": "()" },
		{ "trigger": "", "contents": "()" },
		{ "trigger": "inclued_get_data", "contents": "inclued_get_data(${1:oid})" },
		{ "trigger": "inet_ntop", "contents": "inet_ntop(${1:in_addr})" },
		{ "trigger": "inet_pton", "contents": "inet_pton(${1:address})" },
		{ "trigger": "ini_alter", "contents": "ini_alter()" },
		{ "trigger": "ini_get", "contents": "ini_get(${1:varname})" },
		{ "trigger": "ini_get_all", "contents": "ini_get_all()" },
		{ "trigger": "ini_restore", "contents": "ini_restore(${1:varname})" },
		{ "trigger": "ini_set", "contents": "ini_set(${1:varname}, ${2:newvalue})" },
		{ "trigger": "inotify_add_watch", "contents": "inotify_add_watch(${1:inotify_instance}, ${2:pathname}, ${3:mask})" },
		{ "trigger": "inotify_init", "contents": "inotify_init(${1:oid})" },
		{ "trigger": "inotify_queue_len", "contents": "inotify_queue_len(${1:inotify_instance})" },
		{ "trigger": "inotify_read", "contents": "inotify_read(${1:inotify_instance})" },
		{ "trigger": "inotify_rm_watch", "contents": "inotify_rm_watch(${1:inotify_instance}, ${2:watch_descriptor})" },
		{ "trigger": "interface_exists", "contents": "interface_exists(${1:interface_name})" },
		{ "trigger": "intl_error_name", "contents": "intl_error_name(${1:error_code})" },
		{ "trigger": "intl_get_error_code", "contents": "intl_get_error_code(${1:oid})" },
		{ "trigger": "intl_get_error_message", "contents": "intl_get_error_message(${1:oid})" },
		{ "trigger": "intl_is_failure", "contents": "intl_is_failure(${1:error_code})" },
		{ "trigger": "intval", "contents": "intval(${1:var})" },
		{ "trigger": "ip2long", "contents": "ip2long(${1:ip_address})" },
		{ "trigger": "iptcembed", "contents": "iptcembed(${1:iptcdata}, ${2:jpeg_file_name})" },
		{ "trigger": "iptcparse", "contents": "iptcparse(${1:iptcblock})" },
		{ "trigger": "is_a", "contents": "is_a(${1:object}, ${2:class_name})" },
		{ "trigger": "is_array", "contents": "is_array(${1:var})" },
		{ "trigger": "is_bool", "contents": "is_bool(${1:var})" },
		{ "trigger": "is_callable", "contents": "is_callable(${1:name})" },
		{ "trigger": "is_dir", "contents": "is_dir(${1:filename})" },
		{ "trigger": "is_double", "contents": "is_double()" },
		{ "trigger": "is_executable", "contents": "is_executable(${1:filename})" },
		{ "trigger": "is_file", "contents": "is_file(${1:filename})" },
		{ "trigger": "is_finite", "contents": "is_finite(${1:val})" },
		{ "trigger": "is_float", "contents": "is_float(${1:var})" },
		{ "trigger": "is_infinite", "contents": "is_infinite(${1:val})" },
		{ "trigger": "is_int", "contents": "is_int(${1:var})" },
		{ "trigger": "is_integer", "contents": "is_integer()" },
		{ "trigger": "is_link", "contents": "is_link(${1:filename})" },
		{ "trigger": "is_long", "contents": "is_long()" },
		{ "trigger": "is_nan", "contents": "is_nan(${1:val})" },
		{ "trigger": "is_null", "contents": "is_null(${1:var})" },
		{ "trigger": "is_numeric", "contents": "is_numeric(${1:var})" },
		{ "trigger": "is_object", "contents": "is_object(${1:var})" },
		{ "trigger": "is_readable", "contents": "is_readable(${1:filename})" },
		{ "trigger": "is_real", "contents": "is_real()" },
		{ "trigger": "is_resource", "contents": "is_resource(${1:var})" },
		{ "trigger": "is_scalar", "contents": "is_scalar(${1:var})" },
		{ "trigger": "is_soap_fault", "contents": "is_soap_fault(${1:object})" },
		{ "trigger": "is_string", "contents": "is_string(${1:var})" },
		{ "trigger": "is_subclass_of", "contents": "is_subclass_of(${1:object}, ${2:class_name})" },
		{ "trigger": "is_uploaded_file", "contents": "is_uploaded_file(${1:filename})" },
		{ "trigger": "is_writable", "contents": "is_writable(${1:filename})" },
		{ "trigger": "is_writeable", "contents": "is_writeable()" },
		{ "trigger": "isset", "contents": "isset(${1:var})" },
		{ "trigger": "iterator_apply", "contents": "iterator_apply(${1:iterator}, ${2:function})" },
		{ "trigger": "iterator_count", "contents": "iterator_count(${1:iterator})" },
		{ "trigger": "iterator_to_array", "contents": "iterator_to_array(${1:iterator})" },
		{ "trigger": "JDDayOfWeek", "contents": "JDDayOfWeek(${1:julianday})" },
		{ "trigger": "JDMonthName", "contents": "JDMonthName(${1:julianday}, ${2:mode})" },
		{ "trigger": "JDToFrench", "contents": "JDToFrench(${1:juliandaycount})" },
		{ "trigger": "JDToGregorian", "contents": "JDToGregorian(${1:julianday})" },
		{ "trigger": "jdtojewish", "contents": "jdtojewish(${1:juliandaycount})" },
		{ "trigger": "JDToJulian", "contents": "JDToJulian(${1:julianday})" },
		{ "trigger": "jdtounix", "contents": "jdtounix(${1:jday})" },
		{ "trigger": "JewishToJD", "contents": "JewishToJD(${1:month}, ${2:day}, ${3:year})" },
		{ "trigger": "join", "contents": "join()" },
		{ "trigger": "jpeg2wbmp", "contents": "jpeg2wbmp(${1:jpegname}, ${2:wbmpname}, ${3:dest_height}, ${4:dest_width}, ${5:threshold})" },
		{ "trigger": "json_decode", "contents": "json_decode(${1:json})" },
		{ "trigger": "json_encode", "contents": "json_encode(${1:value})" },
		{ "trigger": "json_last_error", "contents": "json_last_error(${1:oid})" },
		{ "trigger": "judy_type", "contents": "judy_type(${1:array})" },
		{ "trigger": "judy_version", "contents": "judy_version(${1:oid})" },
		{ "trigger": "JulianToJD", "contents": "JulianToJD(${1:month}, ${2:day}, ${3:year})" },
		{ "trigger": "key", "contents": "key(${1:array})" },
		{ "trigger": "krsort", "contents": "krsort(${1:array})" },
		{ "trigger": "ksort", "contents": "ksort(${1:array})" },
		{ "trigger": "lcfirst", "contents": "lcfirst(${1:str})" },
		{ "trigger": "lcg_value", "contents": "lcg_value(${1:oid})" },
		{ "trigger": "lchgrp", "contents": "lchgrp(${1:filename}, ${2:group})" },
		{ "trigger": "lchown", "contents": "lchown(${1:filename}, ${2:user})" },
		{ "trigger": "levenshtein", "contents": "levenshtein(${1:str1}, ${2:str2})" },
		{ "trigger": "libxml_clear_errors", "contents": "libxml_clear_errors(${1:oid})" },
		{ "trigger": "libxml_disable_entity_loader", "contents": "libxml_disable_entity_loader()" },
		{ "trigger": "libxml_get_errors", "contents": "libxml_get_errors(${1:oid})" },
		{ "trigger": "libxml_get_last_error", "contents": "libxml_get_last_error(${1:oid})" },
		{ "trigger": "libxml_set_streams_context", "contents": "libxml_set_streams_context(${1:streams_context})" },
		{ "trigger": "libxml_use_internal_errors", "contents": "libxml_use_internal_errors()" },
		{ "trigger": "link", "contents": "link(${1:target}, ${2:link})" },
		{ "trigger": "linkinfo", "contents": "linkinfo(${1:path})" },
		{ "trigger": "list", "contents": "list(${1:varname})" },
		{ "trigger": "localeconv", "contents": "localeconv(${1:oid})" },
		{ "trigger": "localtime", "contents": "localtime()" },
		{ "trigger": "log", "contents": "log(${1:arg})" },
		{ "trigger": "log10", "contents": "log10(${1:arg})" },
		{ "trigger": "log1p", "contents": "log1p(${1:number})" },
		{ "trigger": "long2ip", "contents": "long2ip(${1:proper_address})" },
		{ "trigger": "lstat", "contents": "lstat(${1:filename})" },
		{ "trigger": "ltrim", "contents": "ltrim(${1:str})" },
		{ "trigger": "lzf_compress", "contents": "lzf_compress(${1:data})" },
		{ "trigger": "lzf_decompress", "contents": "lzf_decompress(${1:data})" },
		{ "trigger": "lzf_optimized_for", "contents": "lzf_optimized_for(${1:oid})" },
		{ "trigger": "magic_quotes_runtime", "contents": "magic_quotes_runtime()" },
		{ "trigger": "mail", "contents": "mail(${1:to}, ${2:subject}, ${3:message})" },
		{ "trigger": "main", "contents": "main()" },
		{ "trigger": "max", "contents": "max(${1:values})" },
		{ "trigger": "mb_check_encoding", "contents": "mb_check_encoding()" },
		{ "trigger": "mb_convert_case", "contents": "mb_convert_case(${1:str}, ${2:mode = MB_CASE_UPPER})" },
		{ "trigger": "mb_convert_encoding", "contents": "mb_convert_encoding(${1:str}, ${2:to_encoding})" },
		{ "trigger": "mb_convert_kana", "contents": "mb_convert_kana(${1:str})" },
		{ "trigger": "mb_convert_variables", "contents": "mb_convert_variables(${1:to_encoding}, ${2:from_encoding}, ${3:vars})" },
		{ "trigger": "mb_decode_mimeheader", "contents": "mb_decode_mimeheader(${1:str})" },
		{ "trigger": "mb_decode_numericentity", "contents": "mb_decode_numericentity(${1:str}, ${2:convmap}, ${3:encoding})" },
		{ "trigger": "mb_detect_encoding", "contents": "mb_detect_encoding(${1:str})" },
		{ "trigger": "mb_detect_order", "contents": "mb_detect_order()" },
		{ "trigger": "mb_encode_mimeheader", "contents": "mb_encode_mimeheader(${1:str})" },
		{ "trigger": "mb_encode_numericentity", "contents": "mb_encode_numericentity(${1:str}, ${2:convmap}, ${3:encoding})" },
		{ "trigger": "mb_encoding_aliases", "contents": "mb_encoding_aliases(${1:encoding})" },
		{ "trigger": "mb_ereg", "contents": "mb_ereg(${1:pattern}, ${2:string})" },
		{ "trigger": "mb_ereg_match", "contents": "mb_ereg_match(${1:pattern}, ${2:string})" },
		{ "trigger": "mb_ereg_replace", "contents": "mb_ereg_replace(${1:pattern}, ${2:replacement}, ${3:string})" },
		{ "trigger": "mb_ereg_search", "contents": "mb_ereg_search()" },
		{ "trigger": "mb_ereg_search_getpos", "contents": "mb_ereg_search_getpos(${1:oid})" },
		{ "trigger": "mb_ereg_search_getregs", "contents": "mb_ereg_search_getregs(${1:oid})" },
		{ "trigger": "mb_ereg_search_init", "contents": "mb_ereg_search_init(${1:string})" },
		{ "trigger": "mb_ereg_search_pos", "contents": "mb_ereg_search_pos()" },
		{ "trigger": "mb_ereg_search_regs", "contents": "mb_ereg_search_regs()" },
		{ "trigger": "mb_ereg_search_setpos", "contents": "mb_ereg_search_setpos(${1:position})" },
		{ "trigger": "mb_eregi", "contents": "mb_eregi(${1:pattern}, ${2:string})" },
		{ "trigger": "mb_eregi_replace", "contents": "mb_eregi_replace(${1:pattern}, ${2:replace}, ${3:string})" },
		{ "trigger": "mb_get_info", "contents": "mb_get_info()" },
		{ "trigger": "mb_http_input", "contents": "mb_http_input()" },
		{ "trigger": "mb_http_output", "contents": "mb_http_output()" },
		{ "trigger": "mb_internal_encoding", "contents": "mb_internal_encoding()" },
		{ "trigger": "mb_language", "contents": "mb_language()" },
		{ "trigger": "mb_list_encodings", "contents": "mb_list_encodings(${1:oid})" },
		{ "trigger": "mb_output_handler", "contents": "mb_output_handler(${1:contents}, ${2:status})" },
		{ "trigger": "mb_parse_str", "contents": "mb_parse_str(${1:encoded_string})" },
		{ "trigger": "mb_preferred_mime_name", "contents": "mb_preferred_mime_name(${1:encoding})" },
		{ "trigger": "mb_regex_encoding", "contents": "mb_regex_encoding()" },
		{ "trigger": "mb_regex_set_options", "contents": "mb_regex_set_options()" },
		{ "trigger": "mb_send_mail", "contents": "mb_send_mail(${1:to}, ${2:subject}, ${3:message})" },
		{ "trigger": "mb_split", "contents": "mb_split(${1:pattern}, ${2:string})" },
		{ "trigger": "mb_strcut", "contents": "mb_strcut(${1:str}, ${2:start})" },
		{ "trigger": "mb_strimwidth", "contents": "mb_strimwidth(${1:str}, ${2:start}, ${3:width})" },
		{ "trigger": "mb_stripos", "contents": "mb_stripos(${1:haystack}, ${2:needle})" },
		{ "trigger": "mb_stristr", "contents": "mb_stristr(${1:haystack}, ${2:needle})" },
		{ "trigger": "mb_strlen", "contents": "mb_strlen(${1:str})" },
		{ "trigger": "mb_strpos", "contents": "mb_strpos(${1:haystack}, ${2:needle})" },
		{ "trigger": "mb_strrchr", "contents": "mb_strrchr(${1:haystack}, ${2:needle})" },
		{ "trigger": "mb_strrichr", "contents": "mb_strrichr(${1:haystack}, ${2:needle})" },
		{ "trigger": "mb_strripos", "contents": "mb_strripos(${1:haystack}, ${2:needle})" },
		{ "trigger": "mb_strrpos", "contents": "mb_strrpos(${1:haystack}, ${2:needle})" },
		{ "trigger": "mb_strstr", "contents": "mb_strstr(${1:haystack}, ${2:needle})" },
		{ "trigger": "mb_strtolower", "contents": "mb_strtolower(${1:str})" },
		{ "trigger": "mb_strtoupper", "contents": "mb_strtoupper(${1:str})" },
		{ "trigger": "mb_strwidth", "contents": "mb_strwidth(${1:str})" },
		{ "trigger": "mb_substitute_character", "contents": "mb_substitute_character()" },
		{ "trigger": "mb_substr", "contents": "mb_substr(${1:str}, ${2:start})" },
		{ "trigger": "mb_substr_count", "contents": "mb_substr_count(${1:haystack}, ${2:needle})" },
		{ "trigger": "md5", "contents": "md5(${1:str})" },
		{ "trigger": "md5_file", "contents": "md5_file(${1:filename})" },
		{ "trigger": "mdecrypt_generic", "contents": "mdecrypt_generic(${1:td}, ${2:data})" },
		{ "trigger": "memcache_debug", "contents": "memcache_debug(${1:on_off})" },
		{ "trigger": "memory_get_peak_usage", "contents": "memory_get_peak_usage()" },
		{ "trigger": "memory_get_usage", "contents": "memory_get_usage()" },
		{ "trigger": "metaphone", "contents": "metaphone(${1:str})" },
		{ "trigger": "method_exists", "contents": "method_exists(${1:object}, ${2:method_name})" },
		{ "trigger": "mhash", "contents": "mhash(${1:hash}, ${2:data})" },
		{ "trigger": "mhash_count", "contents": "mhash_count(${1:oid})" },
		{ "trigger": "mhash_get_block_size", "contents": "mhash_get_block_size(${1:hash})" },
		{ "trigger": "mhash_get_hash_name", "contents": "mhash_get_hash_name(${1:hash})" },
		{ "trigger": "mhash_keygen_s2k", "contents": "mhash_keygen_s2k(${1:hash}, ${2:password}, ${3:salt}, ${4:bytes})" },
		{ "trigger": "microtime", "contents": "microtime()" },
		{ "trigger": "mime_content_type", "contents": "mime_content_type(${1:filename})" },
		{ "trigger": "min", "contents": "min(${1:values})" },
		{ "trigger": "mkdir", "contents": "mkdir(${1:pathname})" },
		{ "trigger": "mktime", "contents": "mktime()" },
		{ "trigger": "money_format", "contents": "money_format(${1:format}, ${2:number})" },
		{ "trigger": "move_uploaded_file", "contents": "move_uploaded_file(${1:filename}, ${2:destination})" },
		{ "trigger": "mt_getrandmax", "contents": "mt_getrandmax(${1:oid})" },
		{ "trigger": "mt_rand", "contents": "mt_rand(${1:oid})" },
		{ "trigger": "mt_srand", "contents": "mt_srand()" },
		{ "trigger": "natcasesort", "contents": "natcasesort(${1:array})" },
		{ "trigger": "natsort", "contents": "natsort(${1:array})" },
		{ "trigger": "next", "contents": "next(${1:array})" },
		{ "trigger": "ngettext", "contents": "ngettext(${1:msgid1}, ${2:msgid2}, ${3:n})" },
		{ "trigger": "nl2br", "contents": "nl2br(${1:string})" },
		{ "trigger": "nl_langinfo", "contents": "nl_langinfo(${1:item})" },
		{ "trigger": "nthmac", "contents": "nthmac(${1:clent}, ${2:data})" },
		{ "trigger": "number_format", "contents": "number_format(${1:number})" },
		{ "trigger": "oauth_get_sbs", "contents": "oauth_get_sbs(${1:http_method}, ${2:uri})" },
		{ "trigger": "oauth_urlencode", "contents": "oauth_urlencode(${1:uri})" },
		{ "trigger": "ob_clean", "contents": "ob_clean(${1:oid})" },
		{ "trigger": "ob_deflatehandler", "contents": "ob_deflatehandler(${1:data}, ${2:mode})" },
		{ "trigger": "ob_end_clean", "contents": "ob_end_clean(${1:oid})" },
		{ "trigger": "ob_end_flush", "contents": "ob_end_flush(${1:oid})" },
		{ "trigger": "ob_etaghandler", "contents": "ob_etaghandler(${1:data}, ${2:mode})" },
		{ "trigger": "ob_flush", "contents": "ob_flush(${1:oid})" },
		{ "trigger": "ob_get_clean", "contents": "ob_get_clean(${1:oid})" },
		{ "trigger": "ob_get_contents", "contents": "ob_get_contents(${1:oid})" },
		{ "trigger": "ob_get_flush", "contents": "ob_get_flush(${1:oid})" },
		{ "trigger": "ob_get_length", "contents": "ob_get_length(${1:oid})" },
		{ "trigger": "ob_get_level", "contents": "ob_get_level(${1:oid})" },
		{ "trigger": "ob_get_status", "contents": "ob_get_status()" },
		{ "trigger": "ob_gzhandler", "contents": "ob_gzhandler(${1:buffer}, ${2:mode})" },
		{ "trigger": "ob_iconv_handler", "contents": "ob_iconv_handler(${1:contents}, ${2:status})" },
		{ "trigger": "ob_implicit_flush", "contents": "ob_implicit_flush()" },
		{ "trigger": "ob_inflatehandler", "contents": "ob_inflatehandler(${1:data}, ${2:mode})" },
		{ "trigger": "ob_list_handlers", "contents": "ob_list_handlers(${1:oid})" },
		{ "trigger": "ob_start", "contents": "ob_start()" },
		{ "trigger": "ob_tidyhandler", "contents": "ob_tidyhandler(${1:input})" },
		{ "trigger": "octdec", "contents": "octdec(${1:octal_string})" },
		{ "trigger": "opendir", "contents": "opendir(${1:path})" },
		{ "trigger": "openlog", "contents": "openlog(${1:ident}, ${2:option}, ${3:facility})" },
		{ "trigger": "ord", "contents": "ord(${1:string})" },
		{ "trigger": "output_add_rewrite_var", "contents": "output_add_rewrite_var(${1:name}, ${2:value})" },
		{ "trigger": "output_reset_rewrite_vars", "contents": "output_reset_rewrite_vars(${1:oid})" },
		{ "trigger": "overload", "contents": "overload(${1:class_name})" },
		{ "trigger": "override_function", "contents": "override_function(${1:function_name}, ${2:function_args}, ${3:function_code})" },
		{ "trigger": "pack", "contents": "pack(${1:format})" },
		{ "trigger": "parse_ini_file", "contents": "parse_ini_file(${1:filename})" },
		{ "trigger": "parse_ini_string", "contents": "parse_ini_string(${1:ini})" },
		{ "trigger": "parse_str", "contents": "parse_str(${1:str})" },
		{ "trigger": "parse_url", "contents": "parse_url(${1:url})" },
		{ "trigger": "passthru", "contents": "passthru(${1:command})" },
		{ "trigger": "pathinfo", "contents": "pathinfo(${1:path})" },
		{ "trigger": "pclose", "contents": "pclose(${1:handle})" },
		{ "trigger": "pfsockopen", "contents": "pfsockopen(${1:hostname})" },
		{ "trigger": "php_check_syntax", "contents": "php_check_syntax(${1:filename})" },
		{ "trigger": "php_ini_loaded_file", "contents": "php_ini_loaded_file(${1:oid})" },
		{ "trigger": "php_ini_scanned_files", "contents": "php_ini_scanned_files(${1:oid})" },
		{ "trigger": "php_logo_guid", "contents": "php_logo_guid(${1:oid})" },
		{ "trigger": "php_sapi_name", "contents": "php_sapi_name(${1:oid})" },
		{ "trigger": "php_strip_whitespace", "contents": "php_strip_whitespace(${1:filename})" },
		{ "trigger": "php_uname", "contents": "php_uname()" },
		{ "trigger": "phpcredits", "contents": "phpcredits()" },
		{ "trigger": "phpinfo", "contents": "phpinfo()" },
		{ "trigger": "phpversion", "contents": "phpversion()" },
		{ "trigger": "pi", "contents": "pi(${1:oid})" },
		{ "trigger": "png2wbmp", "contents": "png2wbmp(${1:pngname}, ${2:wbmpname}, ${3:dest_height}, ${4:dest_width}, ${5:threshold})" },
		{ "trigger": "popen", "contents": "popen(${1:command}, ${2:mode})" },
		{ "trigger": "pos", "contents": "pos()" },
		{ "trigger": "pow", "contents": "pow(${1:base}, ${2:exp})" },
		{ "trigger": "preg_filter", "contents": "preg_filter(${1:pattern}, ${2:replacement}, ${3:subject})" },
		{ "trigger": "preg_grep", "contents": "preg_grep(${1:pattern}, ${2:input})" },
		{ "trigger": "preg_last_error", "contents": "preg_last_error(${1:oid})" },
		{ "trigger": "preg_match", "contents": "preg_match(${1:pattern}, ${2:subject})" },
		{ "trigger": "preg_match_all", "contents": "preg_match_all(${1:pattern}, ${2:subject}, ${3:matches})" },
		{ "trigger": "preg_quote", "contents": "preg_quote(${1:str})" },
		{ "trigger": "preg_replace", "contents": "preg_replace(${1:pattern}, ${2:replacement}, ${3:subject})" },
		{ "trigger": "preg_replace_callback", "contents": "preg_replace_callback(${1:pattern}, ${2:callback}, ${3:subject})" },
		{ "trigger": "preg_split", "contents": "preg_split(${1:pattern}, ${2:subject})" },
		{ "trigger": "prev", "contents": "prev(${1:array})" },
		{ "trigger": "print", "contents": "print(${1:arg})" },
		{ "trigger": "print_r", "contents": "print_r(${1:expression})" },
		{ "trigger": "printf", "contents": "printf(${1:format})" },
		{ "trigger": "proc_close", "contents": "proc_close(${1:process})" },
		{ "trigger": "proc_get_status", "contents": "proc_get_status(${1:process})" },
		{ "trigger": "proc_nice", "contents": "proc_nice(${1:increment})" },
		{ "trigger": "proc_open", "contents": "proc_open(${1:cmd}, ${2:descriptorspec}, ${3:pipes})" },
		{ "trigger": "proc_terminate", "contents": "proc_terminate(${1:process})" },
		{ "trigger": "property_exists", "contents": "property_exists(${1:class}, ${2:property})" },
		{ "trigger": "putenv", "contents": "putenv(${1:setting})" },
		{ "trigger": "qdom_error", "contents": "qdom_error(${1:oid})" },
		{ "trigger": "qdom_tree", "contents": "qdom_tree(${1:doc})" },
		{ "trigger": "quoted_printable_decode", "contents": "quoted_printable_decode(${1:str})" },
		{ "trigger": "quoted_printable_encode", "contents": "quoted_printable_encode(${1:str})" },
		{ "trigger": "quotemeta", "contents": "quotemeta(${1:str})" },
		{ "trigger": "rad2deg", "contents": "rad2deg(${1:number})" },
		{ "trigger": "rand", "contents": "rand(${1:oid})" },
		{ "trigger": "range", "contents": "range(${1:low}, ${2:high})" },
		{ "trigger": "rar_wrapper_cache_stats", "contents": "rar_wrapper_cache_stats(${1:oid})" },
		{ "trigger": "rawurldecode", "contents": "rawurldecode(${1:str})" },
		{ "trigger": "rawurlencode", "contents": "rawurlencode(${1:str})" },
		{ "trigger": "read_exif_data", "contents": "read_exif_data()" },
		{ "trigger": "readdir", "contents": "readdir()" },
		{ "trigger": "readfile", "contents": "readfile(${1:filename})" },
		{ "trigger": "readgzfile", "contents": "readgzfile(${1:filename})" },
		{ "trigger": "readlink", "contents": "readlink(${1:path})" },
		{ "trigger": "realpath", "contents": "realpath(${1:path})" },
		{ "trigger": "realpath_cache_get", "contents": "realpath_cache_get(${1:oid})" },
		{ "trigger": "realpath_cache_size", "contents": "realpath_cache_size(${1:oid})" },
		{ "trigger": "recode", "contents": "recode()" },
		{ "trigger": "recode_file", "contents": "recode_file(${1:request}, ${2:input}, ${3:output})" },
		{ "trigger": "recode_string", "contents": "recode_string(${1:request}, ${2:string})" },
		{ "trigger": "", "contents": "(${1:name})" },
		{ "trigger": "register_shutdown_function", "contents": "register_shutdown_function(${1:function})" },
		{ "trigger": "register_tick_function", "contents": "register_tick_function(${1:function})" },
		{ "trigger": "rename", "contents": "rename(${1:oldname}, ${2:newname})" },
		{ "trigger": "rename_function", "contents": "rename_function(${1:original_name}, ${2:new_name})" },
		{ "trigger": "", "contents": "()" },
		{ "trigger": "", "contents": "()" },
		{ "trigger": "reset", "contents": "reset(${1:array})" },
		{ "trigger": "restore_error_handler", "contents": "restore_error_handler(${1:oid})" },
		{ "trigger": "restore_exception_handler", "contents": "restore_exception_handler(${1:oid})" },
		{ "trigger": "restore_include_path", "contents": "restore_include_path(${1:oid})" },
		{ "trigger": "", "contents": "()" },
		{ "trigger": "rewind", "contents": "rewind(${1:handle})" },
		{ "trigger": "rewinddir", "contents": "rewinddir()" },
		{ "trigger": "rmdir", "contents": "rmdir(${1:dirname})" },
		{ "trigger": "round", "contents": "round(${1:val})" },
		{ "trigger": "rsort", "contents": "rsort(${1:array})" },
		{ "trigger": "rtrim", "contents": "rtrim(${1:str})" },
		{ "trigger": "scandir", "contents": "scandir(${1:directory})" },
		{ "trigger": "sem_acquire", "contents": "sem_acquire(${1:sem_identifier})" },
		{ "trigger": "sem_get", "contents": "sem_get(${1:key})" },
		{ "trigger": "sem_release", "contents": "sem_release(${1:sem_identifier})" },
		{ "trigger": "sem_remove", "contents": "sem_remove(${1:sem_identifier})" },
		{ "trigger": "serialize", "contents": "serialize(${1:value})" },
		{ "trigger": "set_error_handler", "contents": "set_error_handler(${1:error_handler})" },
		{ "trigger": "set_exception_handler", "contents": "set_exception_handler(${1:exception_handler})" },
		{ "trigger": "set_file_buffer", "contents": "set_file_buffer()" },
		{ "trigger": "set_include_path", "contents": "set_include_path(${1:new_include_path})" },
		{ "trigger": "set_magic_quotes_runtime", "contents": "set_magic_quotes_runtime(${1:new_setting})" },
		{ "trigger": "set_socket_blocking", "contents": "set_socket_blocking()" },
		{ "trigger": "set_time_limit", "contents": "set_time_limit(${1:seconds})" },
		{ "trigger": "setcookie", "contents": "setcookie(${1:name})" },
		{ "trigger": "setlocale", "contents": "setlocale(${1:category}, ${2:locale})" },
		{ "trigger": "setrawcookie", "contents": "setrawcookie(${1:name})" },
		{ "trigger": "settype", "contents": "settype(${1:var}, ${2:type})" },
		{ "trigger": "sha1", "contents": "sha1(${1:str})" },
		{ "trigger": "sha1_file", "contents": "sha1_file(${1:filename})" },
		{ "trigger": "shell_exec", "contents": "shell_exec(${1:cmd})" },
		{ "trigger": "show_source", "contents": "show_source()" },
		{ "trigger": "shuffle", "contents": "shuffle(${1:array})" },
		{ "trigger": "signeurlpaiement", "contents": "signeurlpaiement(${1:clent}, ${2:data})" },
		{ "trigger": "similar_text", "contents": "similar_text(${1:first}, ${2:second})" },
		{ "trigger": "simplexml_import_dom", "contents": "simplexml_import_dom(${1:node})" },
		{ "trigger": "simplexml_load_file", "contents": "simplexml_load_file(${1:filename})" },
		{ "trigger": "simplexml_load_string", "contents": "simplexml_load_string(${1:data})" },
		{ "trigger": "sin", "contents": "sin(${1:arg})" },
		{ "trigger": "sinh", "contents": "sinh(${1:arg})" },
		{ "trigger": "sizeof", "contents": "sizeof()" },
		{ "trigger": "sleep", "contents": "sleep(${1:seconds})" },
		{ "trigger": "solr_get_version", "contents": "solr_get_version(${1:oid})" },
		{ "trigger": "sort", "contents": "sort(${1:array})" },
		{ "trigger": "soundex", "contents": "soundex(${1:str})" },
		{ "trigger": "spl_object_hash", "contents": "spl_object_hash(${1:obj})" },
		{ "trigger": "split", "contents": "split(${1:pattern}, ${2:string})" },
		{ "trigger": "spliti", "contents": "spliti(${1:pattern}, ${2:string})" },
		{ "trigger": "sprintf", "contents": "sprintf(${1:format})" },
		{ "trigger": "sqrt", "contents": "sqrt(${1:arg})" },
		{ "trigger": "srand", "contents": "srand()" },
		{ "trigger": "sscanf", "contents": "sscanf(${1:str}, ${2:format})" },
		{ "trigger": "stat", "contents": "stat(${1:filename})" },
		{ "trigger": "stomp_connect_error", "contents": "stomp_connect_error(${1:oid})" },
		{ "trigger": "stomp_version", "contents": "stomp_version(${1:oid})" },
		{ "trigger": "str_getcsv", "contents": "str_getcsv(${1:input})" },
		{ "trigger": "str_ireplace", "contents": "str_ireplace(${1:search}, ${2:replace}, ${3:subject})" },
		{ "trigger": "str_pad", "contents": "str_pad(${1:input}, ${2:pad_length})" },
		{ "trigger": "str_repeat", "contents": "str_repeat(${1:input}, ${2:multiplier})" },
		{ "trigger": "str_replace", "contents": "str_replace(${1:search}, ${2:replace}, ${3:subject})" },
		{ "trigger": "str_rot13", "contents": "str_rot13(${1:str})" },
		{ "trigger": "str_shuffle", "contents": "str_shuffle(${1:str})" },
		{ "trigger": "str_split", "contents": "str_split(${1:string})" },
		{ "trigger": "str_word_count", "contents": "str_word_count(${1:string})" },
		{ "trigger": "strcasecmp", "contents": "strcasecmp(${1:str1}, ${2:str2})" },
		{ "trigger": "strchr", "contents": "strchr()" },
		{ "trigger": "strcmp", "contents": "strcmp(${1:str1}, ${2:str2})" },
		{ "trigger": "strcoll", "contents": "strcoll(${1:str1}, ${2:str2})" },
		{ "trigger": "strcspn", "contents": "strcspn(${1:str1}, ${2:str2})" },
		{ "trigger": "strftime", "contents": "strftime(${1:format})" },
		{ "trigger": "strip_tags", "contents": "strip_tags(${1:str})" },
		{ "trigger": "stripcslashes", "contents": "stripcslashes(${1:str})" },
		{ "trigger": "stripos", "contents": "stripos(${1:haystack}, ${2:needle})" },
		{ "trigger": "stripslashes", "contents": "stripslashes(${1:str})" },
		{ "trigger": "stristr", "contents": "stristr(${1:haystack}, ${2:needle})" },
		{ "trigger": "strlen", "contents": "strlen(${1:string})" },
		{ "trigger": "strnatcasecmp", "contents": "strnatcasecmp(${1:str1}, ${2:str2})" },
		{ "trigger": "strnatcmp", "contents": "strnatcmp(${1:str1}, ${2:str2})" },
		{ "trigger": "strncasecmp", "contents": "strncasecmp(${1:str1}, ${2:str2}, ${3:len})" },
		{ "trigger": "strncmp", "contents": "strncmp(${1:str1}, ${2:str2}, ${3:len})" },
		{ "trigger": "strpbrk", "contents": "strpbrk(${1:haystack}, ${2:char_list})" },
		{ "trigger": "strpos", "contents": "strpos(${1:haystack}, ${2:needle})" },
		{ "trigger": "strptime", "contents": "strptime(${1:date}, ${2:format})" },
		{ "trigger": "strrchr", "contents": "strrchr(${1:haystack}, ${2:needle})" },
		{ "trigger": "strrev", "contents": "strrev(${1:string})" },
		{ "trigger": "strripos", "contents": "strripos(${1:haystack}, ${2:needle})" },
		{ "trigger": "strrpos", "contents": "strrpos(${1:haystack}, ${2:needle})" },
		{ "trigger": "strspn", "contents": "strspn(${1:subject}, ${2:mask})" },
		{ "trigger": "strstr", "contents": "strstr(${1:haystack}, ${2:needle})" },
		{ "trigger": "strtok", "contents": "strtok(${1:str}, ${2:token})" },
		{ "trigger": "strtolower", "contents": "strtolower(${1:str})" },
		{ "trigger": "strtotime", "contents": "strtotime(${1:time})" },
		{ "trigger": "strtoupper", "contents": "strtoupper(${1:string})" },
		{ "trigger": "strtr", "contents": "strtr(${1:str}, ${2:from}, ${3:to})" },
		{ "trigger": "strval", "contents": "strval(${1:var})" },
		{ "trigger": "substr", "contents": "substr(${1:string}, ${2:start})" },
		{ "trigger": "substr_compare", "contents": "substr_compare(${1:main_str}, ${2:str}, ${3:offset})" },
		{ "trigger": "substr_count", "contents": "substr_count(${1:haystack}, ${2:needle})" },
		{ "trigger": "substr_replace", "contents": "substr_replace(${1:string}, ${2:replacement}, ${3:start})" },
		{ "trigger": "symlink", "contents": "symlink(${1:target}, ${2:link})" },
		{ "trigger": "sys_get_temp_dir", "contents": "sys_get_temp_dir(${1:oid})" },
		{ "trigger": "sys_getloadavg", "contents": "sys_getloadavg(${1:oid})" },
		{ "trigger": "syslog", "contents": "syslog(${1:priority}, ${2:message})" },
		{ "trigger": "system", "contents": "system(${1:command})" },
		{ "trigger": "tan", "contents": "tan(${1:arg})" },
		{ "trigger": "tanh", "contents": "tanh(${1:arg})" },
		{ "trigger": "tcpwrap_check", "contents": "tcpwrap_check(${1:daemon}, ${2:address})" },
		{ "trigger": "tempnam", "contents": "tempnam(${1:dir}, ${2:prefix})" },
		{ "trigger": "textdomain", "contents": "textdomain(${1:text_domain})" },
		{ "trigger": "time", "contents": "time(${1:oid})" },
		{ "trigger": "time_nanosleep", "contents": "time_nanosleep(${1:seconds}, ${2:nanoseconds})" },
		{ "trigger": "time_sleep_until", "contents": "time_sleep_until(${1:timestamp})" },
		{ "trigger": "timezone_abbreviations_list", "contents": "timezone_abbreviations_list()" },
		{ "trigger": "timezone_identifiers_list", "contents": "timezone_identifiers_list()" },
		{ "trigger": "timezone_location_get", "contents": "timezone_location_get()" },
		{ "trigger": "timezone_name_from_abbr", "contents": "timezone_name_from_abbr(${1:abbr})" },
		{ "trigger": "timezone_name_get", "contents": "timezone_name_get()" },
		{ "trigger": "timezone_offset_get", "contents": "timezone_offset_get()" },
		{ "trigger": "timezone_open", "contents": "timezone_open()" },
		{ "trigger": "timezone_transitions_get", "contents": "timezone_transitions_get()" },
		{ "trigger": "timezone_version_get", "contents": "timezone_version_get(${1:oid})" },
		{ "trigger": "tmpfile", "contents": "tmpfile(${1:oid})" },
		{ "trigger": "token_get_all", "contents": "token_get_all(${1:source})" },
		{ "trigger": "token_name", "contents": "token_name(${1:token})" },
		{ "trigger": "touch", "contents": "touch(${1:filename})" },
		{ "trigger": "trigger_error", "contents": "trigger_error(${1:error_msg})" },
		{ "trigger": "trim", "contents": "trim(${1:str})" },
		{ "trigger": "uasort", "contents": "uasort(${1:array}, ${2:cmp_function})" },
		{ "trigger": "ucfirst", "contents": "ucfirst(${1:str})" },
		{ "trigger": "ucwords", "contents": "ucwords(${1:str})" },
		{ "trigger": "uksort", "contents": "uksort(${1:array}, ${2:cmp_function})" },
		{ "trigger": "umask", "contents": "umask()" },
		{ "trigger": "uniqid", "contents": "uniqid()" },
		{ "trigger": "unixtojd", "contents": "unixtojd()" },
		{ "trigger": "unlink", "contents": "unlink(${1:filename})" },
		{ "trigger": "unpack", "contents": "unpack(${1:format}, ${2:data})" },
		{ "trigger": "unregister_tick_function", "contents": "unregister_tick_function(${1:function_name})" },
		{ "trigger": "unserialize", "contents": "unserialize(${1:str})" },
		{ "trigger": "unset", "contents": "unset(${1:var})" },
		{ "trigger": "urldecode", "contents": "urldecode(${1:str})" },
		{ "trigger": "urlencode", "contents": "urlencode(${1:str})" },
		{ "trigger": "use_soap_error_handler", "contents": "use_soap_error_handler()" },
		{ "trigger": "user_error", "contents": "user_error()" },
		{ "trigger": "usleep", "contents": "usleep(${1:micro_seconds})" },
		{ "trigger": "usort", "contents": "usort(${1:array}, ${2:cmp_function})" },
		{ "trigger": "utf8_decode", "contents": "utf8_decode(${1:data})" },
		{ "trigger": "utf8_encode", "contents": "utf8_encode(${1:data})" },
		{ "trigger": "var_dump", "contents": "var_dump(${1:expression});" },
		{ "trigger": "var_export", "contents": "var_export(${1:expression})" },
		{ "trigger": "version_compare", "contents": "version_compare(${1:version1}, ${2:version2})" },
		{ "trigger": "vfprintf", "contents": "vfprintf(${1:handle}, ${2:format}, ${3:args})" },
		{ "trigger": "virtual", "contents": "virtual(${1:filename})" },
		{ "trigger": "vprintf", "contents": "vprintf(${1:format}, ${2:args})" },
		{ "trigger": "vsprintf", "contents": "vsprintf(${1:format}, ${2:args})" },
		{ "trigger": "wordwrap", "contents": "wordwrap(${1:str})" },
		{ "trigger": "yaml_emit", "contents": "yaml_emit(${1:data})" },
		{ "trigger": "yaml_emit_file", "contents": "yaml_emit_file(${1:filename}, ${2:data})" },
		{ "trigger": "yaml_parse", "contents": "yaml_parse(${1:input})" },
		{ "trigger": "yaml_parse_file", "contents": "yaml_parse_file(${1:filename})" },
		{ "trigger": "yaml_parse_url", "contents": "yaml_parse_url(${1:url})" },
		{ "trigger": "zip_close", "contents": "zip_close(${1:zip})" },
		{ "trigger": "zip_entry_close", "contents": "zip_entry_close(${1:zip_entry})" },
		{ "trigger": "zip_entry_compressedsize", "contents": "zip_entry_compressedsize(${1:zip_entry})" },
		{ "trigger": "zip_entry_compressionmethod", "contents": "zip_entry_compressionmethod(${1:zip_entry})" },
		{ "trigger": "zip_entry_filesize", "contents": "zip_entry_filesize(${1:zip_entry})" },
		{ "trigger": "zip_entry_name", "contents": "zip_entry_name(${1:zip_entry})" },
		{ "trigger": "zip_entry_open", "contents": "zip_entry_open(${1:zip}, ${2:zip_entry})" },
		{ "trigger": "zip_entry_read", "contents": "zip_entry_read(${1:zip_entry})" },
		{ "trigger": "zip_open", "contents": "zip_open(${1:filename})" },
		{ "trigger": "zip_read", "contents": "zip_read(${1:zip})" },
		{ "trigger": "zlib_get_coding_type", "contents": "zlib_get_coding_type(${1:oid})" }
	]
}